"use strict";(self.webpackChunkrobinlinacre=self.webpackChunkrobinlinacre||[]).push([[6751,1223,3877],{8886:function(e,t,n){n.r(t),n.d(t,{Head:function(){return je},default:function(){return Ve}});var r=n(1151),a=n(7294),i=n(7848),o=n(7825),s=(n(6760),n(4160),n(40),n(9373),n(8342));function l(e){return e`# Introduction to inputs

These lightweight interface components — buttons, sliders, dropdowns, tables, and the like — help you explore data and build interactive displays. For a walkthrough of how you might use these to support data analysis, see [Hello, Inputs!](/@observablehq/hello-inputs)`}function d(e){return e`---
## Usage

Declare your inputs with [viewof](/@observablehq/introduction-to-views), like so:`}function c(e){return e.range([0,11],{value:5,step:.1,label:"Gain"})}function u(e){return e`Now you can reference the input’s value (here *gain*) in any cell, and the cell will run whenever the input changes. No event listeners required!`}function p(e){return e}function m(e,t){return t`The current gain is ${e.toFixed(1)}!`}function h(e){return e`Observable Inputs are released under the [ISC license](https://github.com/observablehq/inputs/blob/main/LICENSE) and depend only on [Hypertext Literal](/@observablehq/htl), our tagged template literal for safely generating dynamic HTML. If you are interested in contributing or wish to report an issue, please see [our repository](https://github.com/observablehq/inputs). For recent changes, please see [our release notes](https://github.com/observablehq/inputs/releases).`}function f(e){return e`---

## Basics

These basic inputs will get you started.

* [Button](/@observablehq/input-button) - do something when a button is clicked
* [Toggle](/@observablehq/input-toggle) - toggle between two values (on or off)
* [Checkbox](/@observablehq/input-checkbox) - choose any from a set
* [Radio](/@observablehq/input-radio) - choose one from a set
* [Range](/@observablehq/input-range) or [Number](/@observablehq/input-range) - choose a number in a range (slider)
* [Select](/@observablehq/input-select) - choose one or any from a set (drop-down menu)
* [Text](/@observablehq/input-text) - enter freeform single-line text
* [Textarea](/@observablehq/input-textarea) - enter freeform multi-line text
* [Date](/@observablehq/input-date) or [Datetime](/@observablehq/input-date) - choose a date
* [Color](/@observablehq/input-color) - choose a color
* [File](/@observablehq/input-file) - choose a local file`}function b(e){return e`---

### [Button](/@observablehq/input-button) 

Do something when a button is clicked. [Examples ›](/@observablehq/input-button) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#button)`}function v(e){return e.button("Click me")}function g(e){return e}function E(e){return e`---

### [Toggle](/@observablehq/input-toggle) 

Toggle between two values (on or off). [Examples ›](/@observablehq/input-toggle) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#toggle)`}function y(e){return e.toggle({label:"Mute"})}function A(e){return e}function x(e){return e`---

### [Checkbox](/@observablehq/input-checkbox) 

Choose any from a set. [Examples ›](/@observablehq/input-checkbox) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#checkbox)`}function T(e){return e.checkbox(["salty","sweet","bitter","sour","umami"],{label:"Flavors"})}function k(e){return e}function I(e){return e`---

### [Radio](/@observablehq/input-radio)

Choose one from a set. [Examples ›](/@observablehq/input-radio) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#radio)`}function R(e){return e.radio(["salty","sweet","bitter","sour","umami"],{label:"Flavor"})}function S(e){return e}function w(e){return e`---

### [Range](/@observablehq/input-range)

Pick a number. [Examples ›](/@observablehq/input-range) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#range)`}function _(e){return e.range([0,255],{step:1,label:"Favorite number"})}function B(e){return e}function N(e){return e`---

### [Select](/@observablehq/input-select)

Choose one, or any, from a menu. [Examples ›](/@observablehq/input-select) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#select)`}function O(e,t){return e.select([null].concat(t),{label:"Home state"})}function L(e){return e}function C(e,t){return e.select(t,{label:"Visited states",multiple:!0})}function D(e){return e}function G(e){return e`---

### [Text](/@observablehq/input-text)

Enter freeform single-line text. [Examples ›](/@observablehq/input-text) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#text)`}function M(e){return e.text({label:"Name",placeholder:"What’s your name?"})}function q(e){return e}function W(e){return e`---

### [Textarea](/@observablehq/input-textarea)

Enter freeform multi-line text. [Examples ›](/@observablehq/input-textarea) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#textarea)`}function H(e){return e.textarea({label:"Biography",placeholder:"What’s your story?"})}function Y(e){return e}function F(e){return e`---

### [Date](/@observablehq/input-date)

Choose a date, or a date and time. [Examples ›](/@observablehq/input-date) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#date)`}function P(e){return e.date({label:"Birthday"})}function $(e){return e}function z(e){return e`---

### [Color](/@observablehq/input-color)

Choose a color. [Examples ›](/@observablehq/input-color) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#color)`}function j(e){return e.color({label:"Favorite color",value:"#4682b4"})}function U(e){return e}function V(e){return e`---

### [File](/@observablehq/input-file)

Choose a local file. [Examples ›](/@observablehq/input-file) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#file)`}function X(e){return e.file({label:"CSV file",accept:".csv",required:!0})}function J(e){return e.csv({typed:!0})}function Z(e){return e`---

## Tabular data

These fancy inputs are designed to work with tabular data such as CSV or TSV [file attachments](/@observablehq/file-attachments) and [database clients](/@observablehq/databases).

* [Search](/@observablehq/input-search) - query a tabular dataset
* [Table](/@observablehq/input-table) - browse a tabular dataset`}function K(e){return e`---

### [Search](/@observablehq/input-search)

Query a tabular dataset. [Examples ›](/@observablehq/input-search) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#search)`}function Q(e,t){return e.search(t,{placeholder:"Search U.S. capitals"})}function ee(e){return e}function te(e){return e`---

### [Table](/@observablehq/input-table)

Browse a tabular dataset. [Examples ›](/@observablehq/input-table) [API Reference ›](https://github.com/observablehq/inputs/blob/main/README.md#table)`}function ne(e,t){return e.table(t)}function re(e){return e}function ae(e){return e`---

## And more!

Got the basics? Here are a few more advanced techniques:

* [Form](https://observablehq.com/@observablehq/input-form?collection=@observablehq/inputs) - combine multiple inputs for a compact display
* [Synchronized inputs](https://observablehq.com/@observablehq/synchronized-inputs?collection=@observablehq/inputs) - bind two or more inputs
* [Introduction to Views](/@observablehq/introduction-to-views) - more on Observable’s viewof`}function ie(e){return e`We are grateful to Jeremy Ashkenas for blazing the trail with [“The Grand Native Inputs Bazaar”](/@jashkenas/inputs). To migrate from Jeremy’s inputs to our new official inputs, consider our [legacy inputs](/@observablehq/legacy-inputs).`}function oe(e){return e`For even more, consider these “friends & family” inputs and techniques shared by the Observable community:`}function se(e,t){return e.table([[["2D Slider","/d/98bbb19bf9e859ee"],"Fabian Iwand","a two-dimensional range"],[["Binary Input","/@rreusser/binary-input"],"Ricky Reusser","bitwise IEEE floating point"],[["DIY inputs","/@bartok32/diy-inputs"],"Bartosz Prusinowski","inputs with fun, custom styles"],[["FineRange","/@rreusser/fine-range"],"Ricky Reusser","high-precision numeric control"],[["Form Input","/@mbostock/form-input"],"Mike Bostock","multiple inputs in single cell"],[["Inputs","/@jashkenas/inputs"],"Jeremy Ashkenas","the original"],[["Player","/@oscar6echo/player"],"oscar6echo","detailed timing control for animation"],[["Scrubber","/@mbostock/scrubber"],"Mike Bostock","play/pause/scrub control for animation"],[["Range Slider","/@mootari/range-slider"],"Fabian Iwand","a two-ended range"],[["Ternary Slider","/@yurivish/ternary-slider"],"Yuri Vishnevsky","a proportion of three values"],[["Data driven range sliders","/@bumbeishvili/data-driven-range-sliders"],"David B.","a range input with a histogram"],[["Snapping Histogram Slider","/@trebor/snapping-histogram-slider"],"Robert Harris","a range input with a histogram"],[["Inputs in grid","/@bumbeishvili/input-groups"],"David B.","combine multiple inputs into a compact grid"],[["List Input","/@harrislapiroff/list-input"],"Harris L.","enter more than one of something"],[["Copier","/@mbostock/copier"],"Mike Bostock","a button to copy to the clipboard"],[["Tangle","/@mbostock/tangle"],"Mike Bostock","Bret Victor-inspired inline scrubbable numbers"],[["Editor","/@cmudig/editor"],"CMU Data Interaction Group","code editor with syntax highlighting"],[["Color Scheme Picker","/@zechasault/color-schemes-and-interpolators-picker"],"Zack Ciminera","pick a D3 color scheme"],[["Easing Curve Editor","/@nhogs/easing-graphs-editor"],"Nhogs","create a custom easing curve"]].map((([e,t,n])=>({Name:e,Author:t,Description:n}))),{sort:"Name",rows:1/0,layout:"auto",width:{Description:"60%"},format:{Name:([e,n])=>t`<a href=${n} target=_blank>${e}`}})}function le(e){return e`To share your reusable input or technique, please leave a comment.`}function de(e){return e`---

## Appendix`}function ce(e){return e("us-state-capitals.tsv").tsv({typed:!0})}function ue(e){return e.map((e=>e.State))}function pe(e){return e`The cells below provide deprecated aliases for older versions of Inputs. Please use Inputs.button *etc.* instead of importing from this notebook.`}function me(e){return e.button}function he(e){return e.toggle}function fe(e){return e.radio}function be(e){return e.checkbox}function ve(e){return e.range}function ge(e){return e.select}function Ee(e){return e.text}function ye(e){return e.textarea}function Ae(e){return e.search}function xe(e){return e.table}function Te(e){return e.input}function ke(e){return e.bind}function Ie(e){return e.disposal}function Re(e){return e.svg}function Se(e){return e.html}function we(e,t){const r=e.module();const a=new Map([["us-state-capitals.tsv",{url:new URL(n(8446),n.b),mimeType:"text/tab-separated-values",toString:function(){return this.url}}]]);return r.builtin("FileAttachment",e.fileAttachments((e=>a.get(e)))),r.variable(t()).define(["md"],l),r.variable(t("usage")).define("usage",["md"],d),r.variable(t("viewof gain")).define("viewof gain",["Inputs"],c),r.variable(t("gain")).define("gain",["Generators","viewof gain"],((e,t)=>e.input(t))),r.variable(t("now")).define("now",["md"],u),r.variable(t("gain2")).define("gain2",["gain"],p),r.variable(t("currentgain")).define("currentgain",["gain","md"],m),r.variable(t()).define(["md"],h),r.variable(t("basics")).define("basics",["md"],f),r.variable(t("button")).define("button",["md"],b),r.variable(t("viewof clicks")).define("viewof clicks",["Inputs"],v),r.variable(t("clicks")).define("clicks",["Generators","viewof clicks"],((e,t)=>e.input(t))),r.variable(t()).define(["clicks"],g),r.variable(t("toggle")).define("toggle",["md"],E),r.variable(t("viewof mute")).define("viewof mute",["Inputs"],y),r.variable(t("mute")).define("mute",["Generators","viewof mute"],((e,t)=>e.input(t))),r.variable(t()).define(["mute"],A),r.variable(t("checkbox")).define("checkbox",["md"],x),r.variable(t("viewof flavors")).define("viewof flavors",["Inputs"],T),r.variable(t("flavors")).define("flavors",["Generators","viewof flavors"],((e,t)=>e.input(t))),r.variable(t()).define(["flavors"],k),r.variable(t("radio")).define("radio",["md"],I),r.variable(t("viewof flavor")).define("viewof flavor",["Inputs"],R),r.variable(t("flavor")).define("flavor",["Generators","viewof flavor"],((e,t)=>e.input(t))),r.variable(t()).define(["flavor"],S),r.variable(t("range")).define("range",["md"],w),r.variable(t("viewof n")).define("viewof n",["Inputs"],_),r.variable(t("n")).define("n",["Generators","viewof n"],((e,t)=>e.input(t))),r.variable(t()).define(["n"],B),r.variable(t("select")).define("select",["md"],N),r.variable(t("viewof homeState")).define("viewof homeState",["Inputs","stateNames"],O),r.variable(t("homeState")).define("homeState",["Generators","viewof homeState"],((e,t)=>e.input(t))),r.variable(t()).define(["homeState"],L),r.variable(t("viewof visitedStates")).define("viewof visitedStates",["Inputs","stateNames"],C),r.variable(t("visitedStates")).define("visitedStates",["Generators","viewof visitedStates"],((e,t)=>e.input(t))),r.variable(t()).define(["visitedStates"],D),r.variable(t()).define(["md"],G),r.variable(t("viewof name")).define("viewof name",["Inputs"],M),r.variable(t("name")).define("name",["Generators","viewof name"],((e,t)=>e.input(t))),r.variable(t()).define(["name"],q),r.variable(t()).define(["md"],W),r.variable(t("viewof bio")).define("viewof bio",["Inputs"],H),r.variable(t("bio")).define("bio",["Generators","viewof bio"],((e,t)=>e.input(t))),r.variable(t()).define(["bio"],Y),r.variable(t()).define(["md"],F),r.variable(t("viewof birthday")).define("viewof birthday",["Inputs"],P),r.variable(t("birthday")).define("birthday",["Generators","viewof birthday"],((e,t)=>e.input(t))),r.variable(t()).define(["birthday"],$),r.variable(t()).define(["md"],z),r.variable(t("viewof color")).define("viewof color",["Inputs"],j),r.variable(t("color")).define("color",["Generators","viewof color"],((e,t)=>e.input(t))),r.variable(t()).define(["color"],U),r.variable(t()).define(["md"],V),r.variable(t("viewof file")).define("viewof file",["Inputs"],X),r.variable(t("file")).define("file",["Generators","viewof file"],((e,t)=>e.input(t))),r.variable(t("data")).define("data",["file"],J),r.variable(t("tables")).define("tables",["md"],Z),r.variable(t()).define(["md"],K),r.variable(t("viewof search")).define("viewof search",["Inputs","capitals"],Q),r.variable(t("search")).define("search",["Generators","viewof search"],((e,t)=>e.input(t))),r.variable(t()).define(["search"],ee),r.variable(t()).define(["md"],te),r.variable(t("viewof rows")).define("viewof rows",["Inputs","search"],ne),r.variable(t("rows")).define("rows",["Generators","viewof rows"],((e,t)=>e.input(t))),r.variable(t()).define(["rows"],re),r.variable(t("techniques")).define("techniques",["md"],ae),r.variable(t()).define(["md"],ie),r.variable(t()).define(["md"],oe),r.variable(t()).define(["Inputs","html"],se),r.variable(t()).define(["md"],le),r.variable(t()).define(["md"],de),r.variable(t("capitals")).define("capitals",["FileAttachment"],ce),r.variable(t("stateNames")).define("stateNames",["capitals"],ue),r.variable(t()).define(["md"],pe),r.variable(t("Button")).define("Button",["Inputs"],me),r.variable(t("Toggle")).define("Toggle",["Inputs"],he),r.variable(t("Radio")).define("Radio",["Inputs"],fe),r.variable(t("Checkbox")).define("Checkbox",["Inputs"],be),r.variable(t("Range")).define("Range",["Inputs"],ve),r.variable(t("Select")).define("Select",["Inputs"],ge),r.variable(t("Text")).define("Text",["Inputs"],Ee),r.variable(t("Textarea")).define("Textarea",["Inputs"],ye),r.variable(t("Search")).define("Search",["Inputs"],Ae),r.variable(t("Table")).define("Table",["Inputs"],xe),r.variable(t("Input")).define("Input",["Inputs"],Te),r.variable(t("bind")).define("bind",["Inputs"],ke),r.variable(t("disposal")).define("disposal",["Inputs"],Ie),r.variable(t("svg")).define("svg",["htl"],Re),r.variable(t("html")).define("html",["htl"],Se),r}function _e(e){return e`# Fault tolerant trie
`}function Be(e,t){const n=e.textarea({value:t,rows:20,resize:"vertical",spellcheck:!1});n.querySelector("textarea").style.maxHeight=null;let r=n.querySelector("textarea");return r.style.setProperty("font-size","0.8rem","important"),r.style.setProperty("line-height","1rem","important"),n}function Ne(e){const t=e.text({label:"Lookup an address",value:"CORNER SHOP 1 RAINBOW ROAD EXTRA ABBOTS LANGLEY HERTS UK",width:800,spellcheck:!1});let n=t.querySelector("input");return n.style.setProperty("font-size","0.8rem","important"),n.style.setProperty("line-height","1rem","important"),t}function Oe(e,t){return e(t)}function Le(e,t,n){return e(t,n)}function Ce(e,t,n,r,a){const i="#d62728";function o(t,{nodeSize:n=18,paddingRight:r=40,bulletRadius:a=3.5,terminalColor:o="#1f77b4",highlightSet:s=new Set,highlightColor:l=i,highlightFillOpacity:d=.12}={}){const c=(u=t)?function e(t,n){const r=n?.children?Array.from(n.children.entries(),(([t,n])=>e(t,n))):Array.isArray(n?.kids)?n.kids.map((([t,n])=>e(t,n))):[];return{name:t,uprn:n?.uprn??null,cnt:n?.cnt??0,term:n?.term??0,nodeRef:n??null,children:r}}("root",u):{name:"root",uprn:null,cnt:0,term:0,nodeRef:null,children:[]};var u;const p=e.hierarchy(c).eachBefore(((e=0)=>t=>{t.index=e++})()),m=p.descendants(),h=[{label:"UPRN",x:380,format:e=>e.data.uprn??"-"},{label:"count",x:460,format:e=>e.data.cnt},{label:"terminal",x:560,format:e=>e.data.term?"✓":"",fill:e=>e.data.term?o:"#444"}],f=Math.max(640,(h.length?e.max(h,(e=>e.x)):0)+r),b=(m.length+1)*n,v=e.create("svg").attr("width",f).attr("height",b).attr("viewBox",[-n/2,3*-n/2,f,b]).attr("style","max-width: 100%; height: auto; font: 11px system-ui, sans-serif; overflow: visible;"),g=e=>s.has(e?.data?.nodeRef);v.append("g").attr("fill","none").attr("stroke","#b3b3b3").attr("stroke-width",1.2).selectAll("path").data(p.links()).join("path").attr("d",(e=>`\n        M${e.source.depth*n},${e.source.index*n}\n        V${e.target.index*n}\n        h${n}\n      `)).attr("stroke",(e=>s.has(e.source.data.nodeRef)&&s.has(e.target.data.nodeRef)?l:"#b3b3b3")).attr("stroke-width",(e=>s.has(e.source.data.nodeRef)&&s.has(e.target.data.nodeRef)?2.4:1.2)).attr("stroke-opacity",(e=>s.has(e.source.data.nodeRef)&&s.has(e.target.data.nodeRef)?.95:.5));const E=v.append("g").selectAll("g").data(m).join("g").attr("transform",(e=>`translate(0,${e.index*n})`));E.insert("rect","circle").attr("x",-n/2).attr("y",-n/2).attr("width",f).attr("height",n).attr("fill",(e=>g(e)?l:"#000")).attr("fill-opacity",(e=>g(e)?d:0)),E.append("circle").attr("cx",(e=>e.depth*n)).attr("r",a).attr("fill",(e=>{const t=g(e);return e.data.term?t?l:o:t?l:"#999"})).attr("stroke",(e=>{const t=g(e);return e.data.term?t?l:o:t?l:null})).attr("stroke-width",(e=>{const t=g(e);return e.data.term?t?2:1.5:t?2:null})),E.append("text").attr("dy","0.32em").attr("x",(e=>e.depth*n+6)).attr("fill",(e=>g(e)?l:"#111")).attr("font-weight",(e=>g(e)?"600":null)).text((e=>e.data.name)),E.append("title").text((e=>`${e.ancestors().reverse().map((e=>e.data.name)).join(" / ")}\nuprn=${e.data.uprn??0}  count=${e.data.cnt}  terminal=${e.data.term?"yes":"no"}`));for(const{label:e,x:i,format:y,fill:A}of h)v.append("text").attr("dy","0.32em").attr("y",-n).attr("x",i).attr("text-anchor","end").attr("font-weight","bold").text(e),E.append("text").attr("dy","0.32em").attr("x",i).attr("text-anchor","end").attr("fill",(e=>g(e)?l:A?A(e):"#444")).text((e=>y(e)));return v.node()}return function(e,s=t,{skipMinLocalCount:l=10,skipMaxInWalk:d=2,minMatchedTokens:c=2,entryMinLocalCount:u=10,maxTrieEntryDepth:p=2,skipCntThreshold:m,maxMissingTailTokensInMessy:h,traceOptions:f={},...b}={}){const v=(e??"").trim(),g={skipMinLocalCount:f.skipMinLocalCount??l??m,skipMaxInWalk:f.skipMaxInWalk??d,minMatchedTokens:f.minMatchedTokens??c,entryMinLocalCount:f.entryMinLocalCount??u,maxTrieEntryDepth:f.maxTrieEntryDepth??p??h,maxStartOffset:f.maxStartOffset},E=n(v,s,g),y=Boolean(E?.outcome?.matched),A=v?y?"#2ca02c":i:"#1f77b4",x=new Set(E?.route?.pathNodes??[]);s&&x.add(s);const T={highlightSet:x,...b};null==T.highlightColor&&(T.highlightColor=A);const k=o(s,T),I=document.createElement("div");I.style.display="flex",I.style.flexDirection="column",I.style.gap="0.5rem";const R=document.createElement("div");if(R.style.fontFamily="sans-serif",R.style.fontSize="12px",R.style.whiteSpace="pre-line",v){I.appendChild(R);const e=document.createElement("div");e.style.display="flex",e.style.flexDirection="column",e.style.fontFamily="monospace",e.style.fontSize="12px",e.style.gap="0.2rem";const t=document.createElement("div");t.textContent=`Input : ${v}`,t.style.color="#444";const n=document.createElement("div");n.textContent=y?`Match : ${E.summary?.matchedTokens?.join(" ")??""}`:"Match : (none)",n.style.color=y?"#2ca02c":"#d62728",e.appendChild(t),e.appendChild(n),I.appendChild(e)}else R.textContent="Enter an address to trace through the trie.",I.appendChild(R);if(k&&I.appendChild(k),"function"==typeof r){const e=r(E);e&&(I.appendChild(a`The following explains how the algorithm walked through the trie from root to branch token by token:`),I.appendChild(e))}return I.trace=E,I}}function De(){return(e,t={})=>{const{showReason:n=!0,showDetails:r=!0,tableClass:a="trace-steps-table"}=t,i=document.createElement("div");i.className="trace-steps";const o=document.createElement("table");o.className=a,o.style.borderCollapse="collapse",o.style.fontFamily="system-ui, sans-serif",o.style.fontSize="12px",o.style.marginTop="0.5rem",o.style.width="100%";const s=(e,t,n="left")=>{const r=document.createElement(e);return r.textContent=t,r.style.border="1px solid #ddd",r.style.padding="0.25rem 0.5rem",r.style.textAlign=n,r},l=document.createElement("tr");l.appendChild(s("th","idx","right")),l.appendChild(s("th","token")),l.appendChild(s("th","action")),n&&l.appendChild(s("th","reason")),r&&l.appendChild(s("th","details")),o.appendChild(l);const d=e?.route?.steps??[],c=e=>{if(!e)return"";switch(e.action){case"consumed":return"consumed_after_skip"===e.reason?"✓ via skip":"✓";case"skipped":return"skip";case"mismatch":return"✗ mismatch";default:return"·"}};if(0===d.length){const e=document.createElement("tr");e.appendChild(s("td","-","right")),e.appendChild(s("td","(no steps)")),e.appendChild(s("td","")),n&&e.appendChild(s("td","")),r&&e.appendChild(s("td","")),o.appendChild(e)}else{const e=d.map(((e,t)=>({step:e,idx:t}))).reverse();for(const{step:t,idx:a}of e){const e=document.createElement("tr");if(e.appendChild(s("td",String(a),"right")),e.appendChild(s("td",t.token??"","left")),e.appendChild(s("td",c(t),"left")),n){const n=t.reason?t.reason.replace(/_/g," "):"";e.appendChild(s("td",n,"left"))}if(r){const n=[];"skip"===t.event?.type&&t.event.lookaheadToken&&n.push(`lookahead→${t.event.lookaheadToken}`),null!=t.event?.nodeAfter?.uprn&&"consume"===t.event.type&&n.push(`uprn=${t.event.nodeAfter.uprn}`),null!=t.event?.nodeAfter?.cnt&&"consume"===t.event.type&&n.push(`cnt=${t.event.nodeAfter.cnt}`),"mismatch"===t.event?.type&&n.push("no child"),e.appendChild(s("td",n.join(", "),"left"))}o.appendChild(e)}}return i.appendChild(o),i}}function Ge(e){const t=(e,t)=>t-1-e,n=e=>Array.from(new Set(e)).sort(((e,t)=>e-t)),r=(e,n)=>{const{messyAddress:r,tokens:a,reversedTokens:i,parameters:o,total:s,attemptsTried:l}=n,d=((e,n,r,a)=>{const i=n.map(((e,t)=>({index:t,token:e,reversedIndex:a-1-t,action:"ignored",reason:"not_processed",event:null,nodeBefore:null,nodeAfter:null}))),o=(e,t)=>{e<0||e>=i.length||(i[e]={...i[e],...t})};for(const t of e.events)null!=t.originalIndex&&("consume"===t.type?o(t.originalIndex,{action:"consumed",reason:"skip"===t.via?"consumed_after_skip":"consumed_direct",event:t,nodeBefore:t.nodeBefore??null,nodeAfter:t.nodeAfter??null}):"post_accept_skip"===t.type?o(t.originalIndex,{action:"skipped",reason:"match_already_found",event:t,nodeBefore:t.node??t.nodeBefore??null,nodeAfter:t.node??t.nodeAfter??null}):"skip"===t.type?o(t.originalIndex,{action:"skipped",reason:t.reason,event:t,nodeBefore:t.nodeBefore??null,nodeAfter:t.nodeAfter??null}):"mismatch"===t.type&&o(t.originalIndex,{action:"mismatch",reason:t.reason,event:t,nodeBefore:t.node??null,nodeAfter:t.node??null}));for(let l=0;l<e.startIndex;l+=1){const e=t(l,a),n=i[e];n&&"ignored"===n.action&&(i[e]={...n,reason:"start_offset"})}const s=e.matched?"ignored_after_accept":"ignored_after_failure";for(let l=e.finalIndex;l<a;l+=1){const e=t(l,a),n=i[e];n&&"ignored"===n.action&&(i[e]={...n,reason:s})}return i})(e,a,0,s);return{messyAddress:r,tokens:a,reversedTokens:i,parameters:o,outcome:{matched:e.matched,type:e.decision?.type??null,reason:e.decision?.reason??null,uprn:e.decision?.uprn??null,node:e.decision?.node??e.finalNode??null,remainingTokens:e.decision?.remainingTokens??null,isLeaf:e.decision?.isLeaf??null},route:{attemptsConsidered:l,startIndex:e.startIndex,entryDepth:e.entryDepth,entryPath:e.entryPath,pathNodes:e.pathNodes,finalIndex:e.finalIndex,events:e.events,steps:d},summary:{consumedCount:e.consumedIndices.length,skippedCount:e.skippedIndices.length,matchedTokens:e.matchedTokens,skippedTokens:e.skippedTokens}}};return function(a,i=e,{skipCntThreshold:o=6,maxMissingTailTokensInMessy:s=0,maxStartOffset:l=2}={}){if(!i)return{messyAddress:a,tokens:[],reversedTokens:[],parameters:{skipCntThreshold:o,maxMissingTailTokensInMessy:s,maxStartOffset:l},outcome:{matched:!1,type:"reject",reason:"missing_trie",uprn:null,node:null,remainingTokens:null,isLeaf:null},route:{attemptsConsidered:0,startIndex:0,entryDepth:0,entryPath:[],pathNodes:[],finalIndex:0,events:[],steps:[]},summary:{consumedCount:0,skippedCount:0,matchedTokens:[],skippedTokens:[]}};const d=(c=a||"")?c.trim().split(/\s+/).filter(Boolean):[];var c;const u=[...d].reverse(),p=u.length,m={skipCntThreshold:o,maxMissingTailTokensInMessy:s,maxStartOffset:l};if(0===p)return{messyAddress:a,tokens:d,reversedTokens:u,parameters:m,outcome:{matched:!1,type:"reject",reason:"empty_input",uprn:null,node:i,remainingTokens:0,isLeaf:0===i.children.size&&1===i.term},route:{attemptsConsidered:0,startIndex:0,entryDepth:0,entryPath:[i],pathNodes:[i],finalIndex:0,events:[],steps:[]},summary:{consumedCount:0,skippedCount:0,matchedTokens:[],skippedTokens:[]}};const h=((e,t)=>{if(!e)return[];const n=[{node:e,path:[e],depth:0}];if(t<=0)return n;const r=[{node:e,depth:0,path:[e]}];for(;r.length;){const{node:e,depth:a,path:i}=r.pop();if(a!==t)for(const t of e.children.values()){const e=[...i,t];n.push({node:t,path:e,depth:a+1}),r.push({node:t,depth:a+1,path:e})}}return n})(i,s);let f=0,b=null;const v=e=>{if(!e)return;if(!b)return void(b=e);const t=b.consumedIndices.length,n=e.consumedIndices.length;(n>t||n===t&&e.pathNodes.length>b.pathNodes.length)&&(b=e)},g={messyAddress:a,tokens:d,reversedTokens:u,parameters:m,total:p},E=Math.min(p-1,Math.max(0,l));for(let e=0;e<=E;e+=1)for(let a=0;a<h.length;a+=1){const i=h[a];f+=1;const s=i.path.slice();let l=i.node,c=e,m=0;const b={attemptId:f,startIndex:e,entryIndex:a,entryDepth:i.depth,entryNode:i.node,entryPath:i.path.slice(),pathNodes:s,events:[],consumedIndices:[],skippedIndices:[],matchedTokens:[],skippedTokens:[],finalNode:i.node,finalIndex:e,matched:!1,decision:null,failure:null},E=(e,t={})=>{b.events.push({type:e,...t,step:b.events.length})};for(E("seed",{node:l,entryDepth:i.depth,startIndex:e,entryIndex:a});c<p;){const e=c,n=t(e,p),r=u[e],a=l.children.get(r);if(a){const t=l;l=a,s.push(l),E("consume",{token:r,originalIndex:n,reversedIndex:e,nodeBefore:t,nodeAfter:l,via:"direct"}),b.consumedIndices.push(n),c+=1;continue}const i=l.children.size>0;if(0===m&&c+1<p&&!(l.term&&i)){const a=c+1,i=u[a],d=l.children.get(i);if(d&&d.cnt>=o){const o=l,u=n,h=t(a,p);E("skip",{token:r,originalIndex:u,reversedIndex:e,lookaheadToken:i,nodeBefore:o,nodeAfter:d,reason:"cnt_gate"}),l=d,s.push(l),E("consume",{token:i,originalIndex:h,reversedIndex:a,nodeBefore:o,nodeAfter:l,via:"skip"}),b.skippedIndices.push(u),b.consumedIndices.push(h),m=1,c+=2;continue}}E("mismatch",{token:r,originalIndex:n,reversedIndex:e,node:l,reason:"no_child"}),b.failure={type:"mismatch",token:r,originalIndex:n,reversedIndex:e};break}b.finalNode=l,b.finalIndex=c,b.pathNodes=s;const y=n(b.consumedIndices),A=n(b.skippedIndices);b.matchedTokens=y.map((e=>d[e])),b.skippedTokens=A.map((e=>d[e]));const x=p-c,T=y.length>0?y[y.length-1]:-1,k=T<0?p:Math.max(0,p-(T+1));if(l.term){const e=0===l.children.size,t=k<=2;if(t&&(e||c===p)){if("mismatch"===b.failure?.type){const{originalIndex:e,reversedIndex:t}=b.failure,n=b.events.findIndex((n=>"mismatch"===n.type&&n.originalIndex===e&&n.reversedIndex===t));if(n>=0){const e=b.events[n];b.events[n]={...e,type:"post_accept_skip",reason:"match_already_found"}}b.failure=null}const t=e?x>0?"terminal_leaf_accept_with_remaining":k>0?"terminal_leaf_accept_with_trailing_tokens":"terminal_leaf_accept":"terminal_non_leaf_consumed_all_tokens";return b.matched=!0,b.decision={type:"accept",reason:t,uprn:l.uprn??null,node:l,remainingTokens:x,isLeaf:e,consumedCount:y.length,skippedCount:A.length},E("accept",{reason:t,node:l,remainingTokens:x,uprn:l.uprn??null}),r(b,{...g,attemptsTried:f})}t||(b.failure={type:"too_many_trailing_tokens",tailIgnoredCount:k,limit:2})}const I="too_many_trailing_tokens"===b.failure?.type?"terminal_exceeded_trailing_token_limit":"mismatch"===b.failure?.type?"mismatch_no_child":c>=p&&!l.term?"non_terminal_after_consuming_all":l.term&&l.children.size>0&&c<p?"terminal_non_leaf_unconsumed_tokens":"no_accept_condition";b.decision={type:"reject",reason:I,uprn:null,node:l,remainingTokens:x,isLeaf:0===l.children.size,consumedCount:y.length,skippedCount:A.length},E("reject",{reason:I,node:l,remainingTokens:x}),v(b)}const y=f;return b||(b={startIndex:0,entryDepth:0,entryPath:[i],pathNodes:[i],finalIndex:0,events:[],consumedIndices:[],skippedIndices:[],matchedTokens:[],skippedTokens:[],matched:!1,decision:{type:"reject",reason:"no_attempts",uprn:null,node:i,remainingTokens:p,isLeaf:0===i.children.size}}),r(b,{...g,attemptsTried:y})}}function Me(e,t){return t(e.split(/\r?\n/).map((e=>e.trim())).filter(Boolean).map(((e,t)=>[t+1,e])))}function qe(){class e{constructor(){this.children=new Map,this.uprn=null,this.term=0,this.cnt=0}child(t){return this.children.has(t)||this.children.set(t,new e),this.children.get(t)}}const t=e=>{let n=e.term?1:0;for(const r of e.children.values())n+=t(r);return e.cnt=n,n},n=n=>{const r=new e;for(const[e,t]of n){const n=t.split(" ").reverse();let a=r;for(const e of n)a=a.child(e);a.term=1,a.uprn=e}return t(r),r};return n.Node=e,n.dfsCnt=t,n}function We(e){return function(t,{nodeSize:n=18,paddingRight:r=40,terminalColor:a="#1f77b4",bulletRadius:i=3.5}={}){const o=(s=t)?function e(t,n){return{name:t,uprn:n?.uprn??null,cnt:n?.cnt??0,term:n?.term??0,children:n?.children?Array.from(n.children.entries(),(([t,n])=>e(t,n))):[]}}("root",s):{name:"root",uprn:null,cnt:0,term:0,children:[]};var s;const l=e.hierarchy(o).eachBefore(((e=0)=>t=>t.index=e++)()),d=l.descendants(),c=[{label:"UPRN",x:380,format:e=>e.data.uprn??"-"},{label:"count",x:460,format:e=>e.data.cnt},{label:"terminal",x:560,format:e=>e.data.term?"✓":"",fill:e=>e.data.term?a:"#444"}],u=Math.max(640,(c.length?e.max(c,(e=>e.x)):0)+r),p=(d.length+1)*n,m=e.create("svg").attr("width",u).attr("height",p).attr("viewBox",[-n/2,3*-n/2,u,p]).attr("style","max-width: 100%; height: auto; font: 11px system-ui, sans-serif; overflow: visible;");m.append("g").attr("fill","none").attr("stroke","#b3b3b3").selectAll().data(l.links()).join("path").attr("d",(e=>`\n        M${e.source.depth*n},${e.source.index*n}\n        V${e.target.index*n}\n        h${n}\n      `));const h=m.append("g").selectAll().data(d).join("g").attr("transform",(e=>`translate(0,${e.index*n})`));h.append("circle").attr("cx",(e=>e.depth*n)).attr("r",i).attr("fill",(e=>e.data.term?a:"#999")).attr("stroke",(e=>e.data.term?a:null)).attr("stroke-width",(e=>e.data.term?1.5:null)),h.append("text").attr("dy","0.32em").attr("x",(e=>e.depth*n+6)).attr("fill","#111").text((e=>e.data.name)),h.append("title").text((e=>`${e.ancestors().reverse().map((e=>e.data.name)).join(" / ")}\nuprn=${e.data.uprn??0}  count=${e.data.cnt}  terminal=${e.data.term?"yes":"no"}`));for(const{label:e,x:f,format:b,fill:v}of c)m.append("text").attr("dy","0.32em").attr("y",-n).attr("x",f).attr("text-anchor","end").attr("font-weight","bold").text(e),h.append("text").attr("dy","0.32em").attr("x",f).attr("text-anchor","end").attr("fill",(e=>v?v(e):"#444")).text((e=>b(e)));return m.node()}}function He(e,t){return e(t)}function Ye(e,t){return t(e.split(/\r?\n/).map((e=>e.trim())).filter(Boolean).map(((e,t)=>[t+1,e])))}function Fe(){return"1 HIGH STREET WESTMINSTER\n2 HIGH STREET WESTMINSTER\n3 HIGH STREET WESTMINSTER\nFLAT A 3 HIGH STREET WESTMINSTER\nFLAT B 3 HIGH STREET WESTMINSTER\n4 HIGH STREET WESTMINSTER\n5 HIGH STREET WESTMINSTER\nANNEX 5 HIGH STREET WESTMINSTER"}function Pe(){return"1 RAINBOW ROAD ABBOTS LANGLEY\n2 RAINBOW ROAD ABBOTS LANGLEY\n3 RAINBOW ROAD ABBOTS LANGLEY\nFLAT A 3 RAINBOW ROAD ABBOTS LANGLEY\nFLAT B 3 RAINBOW ROAD ABBOTS LANGLEY\n4 RAINBOW ROAD ABBOTS LANGLEY\n5 RAINBOW ROAD ABBOTS LANGLEY\nANNEX 5 RAINBOW ROAD ABBOTS LANGLEY\n8 RAINBOW ROAD ABBOTS LANGLEY\nMY LONG BUSINESS NAME 9 RAINBOW ROAD ABBOTS LANGLEY"}function $e(e,t){return e`
\`\`\`txt
${t}
\`\`\`

`}function ze(e,t){const n=e.module();n.variable(t()).define(["md"],_e),n.variable(t("viewof test_addresses")).define("viewof test_addresses",["Inputs","initial_list_of_addresses"],Be),n.variable(t("test_addresses")).define("test_addresses",["Generators","viewof test_addresses"],((e,t)=>e.input(t))),n.variable(t("viewof messy_address_to_lookup")).define("viewof messy_address_to_lookup",["Inputs"],Ne),n.variable(t("messy_address_to_lookup")).define("messy_address_to_lookup",["Generators","viewof messy_address_to_lookup"],((e,t)=>e.input(t))),n.variable(t("trie_basic")).define("trie_basic",["show_trie_using_d3","addressTrie"],Oe),n.variable(t("trie_with_route")).define("trie_with_route",["show_highlighted_trie_using_d3","messy_address_to_lookup","addressTrie"],Le),n.variable(t("show_highlighted_trie_using_d3")).define("show_highlighted_trie_using_d3",["d3","addressTrie","traceAddressRoute","renderTraceStepsTable","md"],Ce),n.variable(t("renderTraceStepsTable")).define("renderTraceStepsTable",De),n.variable(t("traceAddressRoute")).define("traceAddressRoute",["addressTrie"],Ge),n.variable(t("addressTrie")).define("addressTrie",["test_addresses","buildReverseTrie"],Me),n.variable(t("buildReverseTrie")).define("buildReverseTrie",qe);const r=e.module(we);return n.import("Textarea",r),n.variable(t("show_trie_using_d3")).define("show_trie_using_d3",["d3"],We),n.variable(t("example_trie_for_blog")).define("example_trie_for_blog",["show_trie_using_d3","trie_for_blog"],He),n.variable(t("trie_for_blog")).define("trie_for_blog",["hard_coded_addresses","buildReverseTrie"],Ye),n.variable(t("hard_coded_addresses")).define("hard_coded_addresses",Fe),n.variable(t("initial_list_of_addresses")).define("initial_list_of_addresses",Pe),n.variable(t("initial_list_of_addresses_md")).define("initial_list_of_addresses_md",["md","initial_list_of_addresses"],$e),n}const je=e=>a.createElement(o.H,{frontmatter:e.pageContext.frontmatter});function Ue(e){const t=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",ul:"ul",li:"li",h2:"h2",strong:"strong",a:"a"},(0,r.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.h1,null,"Address matching using a fault tolerant trie"),"\n",a.createElement(t.p,null,"A data structure known as a ",a.createElement(t.code,null,"trie")," offers a powerful tool for address matching.  It exploits the hierarchical nature of addresses, whereby tokens (words) in the address are typically represented in a specific to general order geographically."),"\n",a.createElement(t.p,null,"For example, consider the following addresses:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-txt"},"1 HIGH STREET WESTMINSTER\n2 HIGH STREET WESTMINSTER\n3 HIGH STREET WESTMINSTER\nFLAT A 3 HIGH STREET WESTMINSTER\nFLAT B 3 HIGH STREET WESTMINSTER\n4 HIGH STREET WESTMINSTER\n5 HIGH STREET WESTMINSTER\nANNEX 5 HIGH STREET WESTMINSTER\n")),"\n",a.createElement(t.p,null,"These can be represented as a trie as follows, where the blue nodes represent terminal nodes (the end of an address):"),"\n",a.createElement(s.A5,{notebook:ze},a.createElement(s.Gc,{cellName:"example_trie_for_blog"}),a.createElement(t.p,null,"Observe how the trie structure encodes a lot of useful information about the tokens in the addresses. For example:"),a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Does the token represent a 'terminal node' i.e. the end of an address"),"\n",a.createElement(t.li,null,"How many addresses can be reached from the node (the ",a.createElement(t.code,null,"count")," property)"),"\n",a.createElement(t.li,null,"Whether the token represents a leaf (does ",a.createElement(t.code,null,"count=1"),").  Note that some terminal nodes are not leaves (the ",a.createElement(t.code,null,"ANNEX")," example)"),"\n"),a.createElement(t.h2,null,"How to use a trie for address matching"),a.createElement(t.p,null,"By walking the trie from root to branch we can attempt to match an input address to the addresses in the trie."),a.createElement(t.p,null,"On the face of it, this is little different from exact matching.  However, we can make this process much more powerful by introducing ",a.createElement(t.strong,null,"fault tolerance")," into the trie."),a.createElement(t.p,null,"Consider for example these two addresses:"),a.createElement(t.pre,null,a.createElement(t.code,{className:"language-txt"},"Messy address:  CORNER SHOP 8 RAINBOW ROAD EXTRA ABBOTS LANGLEY HERTS UK\nClean address:  1 RAINBOW ROAD EXTRA ABBOTS LANGLEY\n")),a.createElement(t.p,null,"We could define the following rules for fault tolerance:"),a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"You may ignore token(s) at the end of the messy address if by doing so, you can 'join' the trie of clean addresses at a node with a count above some threshold"),"\n",a.createElement(t.li,null,"You may skip a token in the middle of the messy address if this token does not exist in the trie at the current node, and by skipping it you can 'rejoin' the trie."),"\n",a.createElement(t.li,null,"You may skip superfluous tokens at the start of the messy address if you've already hit a terminal node, and that terminal node does not have children."),"\n"),a.createElement(t.h2,null,"Interactive playground"),a.createElement(t.p,null,"Let's see how this works in practice. In the following I use a simple set of fault tolerant rules for illustrative purposes."),a.createElement(t.p,null,"Consider the following canonical addresses (note: this is ✨interactive✨ and you can edit the addresses):"),a.createElement(s.Gc,{cellName:"viewof test_addresses"}),a.createElement(t.p,null,"We can look up a messy address in the trie as follows.  Again, this is ✨interactive✨."),a.createElement(s.Gc,{cellName:"viewof messy_address_to_lookup"}),a.createElement(s.Gc,{cellName:"trie_with_route"})),"\n",a.createElement(t.h2,null,"Implementing as a DuckDB Community extension"),"\n",a.createElement(t.p,null,"I have written a DuckDB Community Extension called ",a.createElement(t.a,{href:"https://duckdb.org/community_extensions/extensions/splink_udfs.html"},"splink_udfs")," that implements this function."),"\n",a.createElement(t.p,null,"You can try it with in ",a.createElement(t.a,{href:"https://shell.duckdb.org/"},"shell.duckdb.org")," using the script you can unfold below:"),"\n",a.createElement("details",null,a.createElement("summary",null,"Click to expand"),a.createElement(t.pre,null,a.createElement(t.code,{className:"language-sql"},"-- Load the extension in shell.duckdb.org\nINSTALL splink_udfs FROM community;\nLOAD splink_udfs;\n\n-- Test data\nCREATE OR REPLACE TEMP TABLE os_addresses(\n  uprn BIGINT,\n  addr VARCHAR,\n  postcode_group INTEGER\n);\n\nINSERT INTO os_addresses VALUES\n (1,'1 RAINBOW ROAD ABBOTS LANGLEY',2),\n (2,'2 RAINBOW ROAD ABBOTS LANGLEY',2),\n (3,'3 RAINBOW ROAD ABBOTS LANGLEY',2),\n (4,'4 RAINBOW ROAD ABBOTS LANGLEY',2),\n (5,'5 RAINBOW ROAD ABBOTS LANGLEY',2),\n (6,'6 RAINBOW ROAD ABBOTS LANGLEY',2),\n (7,'7 RAINBOW ROAD ABBOTS LANGLEY',2),\n (8,'ANNEX 7 RAINBOW ROAD ABBOTS LANGLEY',2),\n (9,'9 RAINBOW ROAD ABBOTS LANGLEY',2),\n (10,'10 RAINBOW ROAD ABBOTS LANGLEY',2),\n (11,'11 RAINBOW ROAD ABBOTS LANGLEY',2),\n (12,'12 RAINBOW ROAD ABBOTS LANGLEY',2),\n (13,'13 RAINBOW ROAD ABBOTS LANGLEY',2),\n (14,'14 RAINBOW ROAD ABBOTS LANGLEY',2),\n (15,'15 RAINBOW ROAD ABBOTS LANGLEY',2),\n (16,'16 RAINBOW ROAD ABBOTS LANGLEY',2),\n (17,'17 RAINBOW ROAD ABBOTS LANGLEY',2),\n (18,'18 RAINBOW ROAD ABBOTS LANGLEY',2),\n (19,'19 RAINBOW ROAD ABBOTS LANGLEY',2),\n (20,'20 RAINBOW ROAD ABBOTS LANGLEY',2),\n (21,'21 RAINBOW ROAD ABBOTS LANGLEY',2),\n (22,'22 RAINBOW ROAD ABBOTS LANGLEY',2),\n (23,'MY LONG BUSINESS NAME 45 RAINBOW ROAD ABBOTS LANGLEY',2),\n (34,'SOME OTHER ADDRESS 1 HIGH STREET',1);\n\n-- Build tries per postcode_group\nCREATE OR REPLACE TEMP TABLE trie AS\nWITH toks AS (\n  SELECT\n    postcode_group,\n    uprn,\n    string_split(regexp_replace(addr, '\\\\s+', ' '), ' ') AS t\n  FROM os_addresses\n)\nSELECT\n  postcode_group,\n  build_suffix_trie(uprn, t) AS trie\nFROM toks\nGROUP BY postcode_group;\n\n-- Example lookup joined on postcode_group\nWITH messy_addresses AS (\n  SELECT\n    2 AS postcode_group,\n    string_split(regexp_replace('MY BUSINESS 22 RAINBOW ROAD ABBOTS LANGLEY', '\\\\s+', ' '), ' ') AS tokens\n)\nSELECT\n  find_address(string_split('MY BUSINESS 22 RAINBOW ROAD ABBOTS LANGLEY HERTS', ' '), r.trie) AS uprn,\nFROM messy_addresses m\nJOIN trie r USING (postcode_group);\n"))),"\n",a.createElement(t.p,null,"We are currently working on adding this approach as part of ",a.createElement(t.a,{href:"https://github.com/moj-analytical-services/uk_address_matcher"},"uk_address_matcher")," a package for fast, accurate address matching."))}var Ve=function(e){return void 0===e&&(e={}),a.createElement(i.fE,e,a.createElement(Ue,e))}},8342:function(e,t,n){n.d(t,{A5:function(){return u},Gc:function(){return c}});var r=n(7294),a=n(6493);const i=(0,r.createContext)(null),o="mdx-container-div",s=new a.Zu;Object.assign({},s,{width:l});function l(){return s.Generators.observe((e=>{let t=e(document.getElementById(o).clientWidth);function n(){let n=document.getElementById(o).clientWidth;n!==t&&e(t=n)}return window.addEventListener("resize",n),()=>window.removeEventListener("resize",n)}))}function d(e){let{notebook:t,children:n}=e;const{0:o,1:s}=(0,r.useState)({}),d=new a.r_(Object.assign({},new a.Zu,{width:l}));return(0,r.useEffect)((()=>(d.module(t,(e=>{if(o[e])return new a.lj(o[e])})),()=>d.dispose())),[d,o,t]),r.createElement(i.Provider,{value:{setSharedRefs:s}},n)}function c(e){let{cellName:t,styles:n,className:a}=e;const o=(0,r.useRef)(null),{setSharedRefs:s}=(0,r.useContext)(i);return(0,r.useEffect)((()=>{s((e=>({...e,[t]:o.current})))}),[t,s]),r.createElement("div",{ref:o,style:n,className:a})}function u(e){let{notebook:t,children:n}=e;return r.createElement(d,{notebook:t},n)}},7825:function(e,t,n){n.d(t,{H:function(){return i}});var r=n(7294),a=n(4160);const i=e=>{let{frontmatter:t}=e;const{title:n,description:i,image:o,siteUrl:s,twitterUsername:l}=(0,a.K2)("1865044719").site.siteMetadata,d={title:(null==t?void 0:t.title)||n,description:(null==t?void 0:t.description)||i,image:`${s}${(null==t?void 0:t.image)||o}`,url:`${s}${(null==t?void 0:t.pathname)||""}`,twitterUsername:l,...t},c=null==t?void 0:t.stylesheet;return r.createElement(r.Fragment,null,r.createElement("title",null,d.title),r.createElement("meta",{name:"description",content:d.description}),r.createElement("meta",{name:"image",content:d.image}),c&&r.createElement("link",{rel:"stylesheet",type:"text/css",href:`/styles/${c}`}))}},6760:function(e,t,n){var r=n(7294);t.Z=e=>{let{children:t}=e;const n=r.Children.map(t,(e=>r.isValidElement(e)&&"p"===e.type?e.props.children:e));return r.createElement("h2",{className:"text-xl font-sans font-normal text-gray-500 mb-8 mt-0"},n)}},9373:function(e,t,n){n.r(t),n.d(t,{default:function(){return a}});var r=n(7294);function a(e){let{messyAddress:t,candidates:n=[]}=e;const a={margin:0,padding:"0.25rem",background:"#f3f4f6",borderRadius:"0.25rem",fontFamily:"monospace",fontSize:"0.85rem",whiteSpace:"pre-wrap",lineHeight:1.3},i={fontWeight:600,fontSize:"0.75rem",color:"#374151",letterSpacing:"0.01em"},o=1===n.length?"Candidate address":"Candidate addresses";return r.createElement("div",{style:{border:"1px solid #d1d5db",borderRadius:"0.25rem",padding:"0.75rem",maxWidth:"40rem",display:"flex",flexDirection:"column",gap:"0.75rem",fontSize:"0.85rem",marginBottom:"0.5em"}},r.createElement("div",null,r.createElement("span",{style:i},"Messy address"),r.createElement("pre",{style:{...a,marginTop:"0.25rem"}},t)),r.createElement("div",null,r.createElement("span",{style:i},o),r.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"0.4rem",marginTop:"0.25rem"}},n.map(((e,t)=>{let{address:n,isMatch:i}=e;const o="#16a34a",s="#7f1d1d";let l,d,c="1px solid transparent",u="";return!0===i?(c=`1px solid ${o}`,u="✅",d=o):!1===i&&(l=s,u="",d=s),r.createElement("div",{key:t,style:{display:"flex",flexDirection:"row",alignItems:"stretch"}},r.createElement("span",{style:{fontFamily:"inherit",fontWeight:500,fontSize:"0.85rem",color:"#6b7280",minWidth:"1.5rem",textAlign:"right",marginRight:"0.0rem",userSelect:"none",display:"flex",alignItems:"flex-start",paddingTop:"0.25rem"}},t+1,"."),r.createElement("div",{style:{display:"flex",flex:1,alignItems:"center",gap:"0.6rem",border:c,borderRadius:"0.25rem",padding:"0.25rem"}},r.createElement("pre",{style:{...a,margin:0,color:l}},n),r.createElement("span",{style:{fontSize:"1.1rem",lineHeight:1,color:d,userSelect:"none",width:"1.25rem",textAlign:"center"}},u)))})))))}},40:function(e,t,n){n.r(t),n.d(t,{default:function(){return a}});var r=n(7294);function a(e){let{addressA:t,addressB:n,isMatch:a}=e;const i=a?"#16a34a":"#dc2626",o=a?"match":"non-match",s=a?"✅":"❌",l={margin:0,padding:"0.25rem",background:"#f3f4f6",borderRadius:"0.25rem",fontFamily:"monospace",fontSize:"0.85rem",whiteSpace:"pre-wrap",lineHeight:1.3};return r.createElement("div",{style:{border:`1px solid ${i}`,borderRadius:"0.25rem",padding:"0.5rem",display:"flex",alignItems:"center",gap:"0.75rem",maxWidth:"40rem"}},r.createElement("div",{style:{flex:1}},r.createElement("pre",{style:l},t),r.createElement("pre",{style:{...l,marginTop:"0.35rem"}},n)),r.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",color:i,fontWeight:700,fontSize:"0.8rem",userSelect:"none",minWidth:"4.5rem"}},r.createElement("span",{style:{fontSize:"1.4rem",lineHeight:1}},s),o))}},8446:function(e,t,n){e.exports=n.p+"02853e2f7019baf2de8a.tsv"}}]);
//# sourceMappingURL=component---src-mdx-fault-tolerant-trie-mdx-94c0a9e5a851350a5402.js.map