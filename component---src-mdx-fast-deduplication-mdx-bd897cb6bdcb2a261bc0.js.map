{"version":3,"file":"component---src-mdx-fast-deduplication-mdx-bd897cb6bdcb2a261bc0.js","mappings":"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","sources":["webpack://robinlinacre/./src/mdx/fast_deduplication.mdx","webpack://robinlinacre/./src/components/Subtitle.jsx","webpack://robinlinacre/./node_modules/react-vega/esm/VegaLite.js","webpack://robinlinacre/./node_modules/d3-array/src/ascending.js","webpack://robinlinacre/./node_modules/d3-dsv/src/dsv.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {MDXLayout} from \"../components/MDXLayout\";\nimport {SEO} from \"../components/SEO\";\nexport const Head = props => React.createElement(SEO, {\n  frontmatter: props.pageContext.frontmatter\n});\nimport {Link} from 'gatsby';\nimport {Vega, VegaLite} from \"react-vega\";\nimport summary_chart from \"./fast_deduplication/summary_chart.vl.json\";\nimport cpu_mem_chart from \"./fast_deduplication/cpu_mem_chart.vl.json\";\nimport by_function_chart from \"./fast_deduplication/by_function_chart.vl.json\";\nimport metrics_spark_filtered from \"./fast_deduplication/metrics_spark_filtered.vl.json\";\nimport spark_vs_duckdb_chart from \"./fast_deduplication/spark_vs_duckdb_chart.vl.json\";\nimport DefinitionToolTip from \"../components/DefinitionToolTip\";\nimport Subtitle from \"../components/Subtitle\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    sup: \"sup\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    section: \"section\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Super-fast deduplication of large datasets using Splink and DuckDB\"), \"\\n\", React.createElement(Subtitle, null, \"Evaluating 1 billion record comparisons to deduplicate 7 million records in two minutes\"), \"\\n\", React.createElement(_components.h2, null, \"Summary\"), \"\\n\", React.createElement(_components.p, null, \"Data deduplication is a ubiquitous problem that results from multiple records being collected for the same entity:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"first_name\"), React.createElement(_components.th, null, \"surname\"), React.createElement(_components.th, null, \"dob\"), React.createElement(_components.th, null, \"city\"), React.createElement(_components.th, null, \"source_data_system\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"lucas\"), React.createElement(_components.td, null, \"smith\"), React.createElement(_components.td, null, \"1984-01-02\"), React.createElement(_components.td, null, \"London\"), React.createElement(_components.td, null, \"sales\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"lucas\"), React.createElement(_components.td, null, \"smyth\"), React.createElement(_components.td, null, \"1984-07-02\"), React.createElement(_components.td, null, \"Manchester\"), React.createElement(_components.td, null, \"sales\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"lucas\"), React.createElement(_components.td, null, \"smyth\"), React.createElement(_components.td, null, \"1984-07-02\"), React.createElement(_components.td), React.createElement(_components.td, null, \"marketing\")))), \"\\n\", React.createElement(_components.p, null, \"The lack of a unique identifier means that there's no easy way of knowing whether these records refer to the same person.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-1\",\n    id: \"user-content-fnref-1\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"1\"))), \"\\n\", React.createElement(_components.p, null, \"Historically, deduplicating large datasets has been very time consuming, with runtimes of many hours, and severe limits on the size of datasets that can be worked with.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/moj-analytical-services/splink\"\n  }, \"Splink\"), \" is a free, open source Python library to address this problem. It's designed for use on very large datasets, so speed is imperative.  It uses \", React.createElement(_components.a, {\n    href: \"https://duckdb.org/\"\n  }, \"DuckDB\"), \" as its default backend to achieve fast parallelised execution.\"), \"\\n\", React.createElement(_components.p, null, \"This blog post presents the results of benchmarking Splink. It shows it is able to deduplicate a 7 million record dataset in just over 2 minutes, and at a cost of less than $1.00 using AWS EC2.\"), \"\\n\", React.createElement(_components.p, null, \"This summary chart shows how runtime varies by the spec of the machine used, with the lowest spec machine comparable to laptop:\"), \"\\n\", React.createElement(VegaLite, {\n    spec: summary_chart\n  }), \"\\n\", React.createElement(_components.p, null, \"To the best of my knowledge, these results show that it is fastest free tool for accurately deduplicating large datasets - by at least an order of magnitude.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-2\",\n    id: \"user-content-fnref-2\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"2\"))), \"\\n\", React.createElement(_components.h2, null, \"Input data\"), \"\\n\", React.createElement(_components.p, null, \"To test the performance of Splink, a dataset of people was collected from the \", React.createElement(_components.a, {\n    href: \"https://query.wikidata.org/\"\n  }, \"Wikidata Query Service\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Each record was corrupted to generate a varying number of duplicates according to a \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Zipf%27s_law\"\n  }, \"zipf\"), \" distribution.  The median number of duplicates was 8 and the number of duplicates ranged from 0 to 35.\"), \"\\n\", React.createElement(_components.p, null, \"For example, the rows corresponding to WikiData ID \", React.createElement(_components.a, {\n    href: \"https://www.wikidata.org/wiki/Q101637549\"\n  }, \"Q101637549\"), \" look like this:\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, {\n    align: \"left\"\n  }, \"first_name\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"middle_name\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"last_name\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"dob\"), React.createElement(_components.th, {\n    align: \"right\"\n  }, \"birth_lat\"), React.createElement(_components.th, {\n    align: \"right\"\n  }, \"birth_lng\"), React.createElement(_components.th, {\n    align: \"left\"\n  }, \"occupation\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"josef\"), React.createElement(_components.td, {\n    align: \"left\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"heřman\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"1845-01-13\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"49.74\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"13.38\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"high school teacher\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"josef\"), React.createElement(_components.td, {\n    align: \"left\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"heřman\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"1845-01-13\"), React.createElement(_components.td, {\n    align: \"right\"\n  }), React.createElement(_components.td, {\n    align: \"right\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"high school teacher\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"josef\"), React.createElement(_components.td, {\n    align: \"left\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"heřjan\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"1845-01-13\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"49.96\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"13.35\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"high school teacher\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"joseph\"), React.createElement(_components.td, {\n    align: \"left\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"hermann\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"1845-01-13\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"49.74\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"13.38\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"travel writer\")), React.createElement(_components.tr, null, React.createElement(_components.td, {\n    align: \"left\"\n  }, \"jowef\"), React.createElement(_components.td, {\n    align: \"left\"\n  }), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"heřman\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"1845-01-01\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"49.74\"), React.createElement(_components.td, {\n    align: \"right\"\n  }, \"13.38\"), React.createElement(_components.td, {\n    align: \"left\"\n  }, \"high school teacher\")))), \"\\n\", React.createElement(_components.p, null, \"We can see different types of errors in all the fields, missing data, and no simple rule that could be used to be sure all these records pertain to the same entity.\"), \"\\n\", React.createElement(_components.h2, null, \"Splink script\"), \"\\n\", React.createElement(_components.p, null, \"A Splink model was developed that is representative of the complexity of a typical large scale linkage job:\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-3\",\n    id: \"user-content-fnref-3\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"3\"))), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A wide range of \", React.createElement(DefinitionToolTip, {\n    term: \"blocking_rule\",\n    text: \"blocking rules\"\n  }), \" are used to create record comparisons, ensuring high recall of true matches. The blocking rules are relatively loose and create 1bn comparisons in total.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-4\",\n    id: \"user-content-fnref-4\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"4\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(DefinitionToolTip, {\n    term: \"tf_adjustment\",\n    text: \"Term frequency adjustments\"\n  }), \"  are made on columns with skew in value frequencies\"), \"\\n\", React.createElement(_components.li, null, \"A range of fuzzy matching scenarios are evaluated using functions like \", React.createElement(_components.code, null, \"jaro-winkler\"), \" and \", React.createElement(_components.code, null, \"levenshtein\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The code for estimating (training) the Splink model, and then using it to predict which record match is as follows:\"), \"\\n\", React.createElement(\"details\", null, React.createElement(\"summary\", null, \"Click to expand full Splink script\"), React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import pandas as pd\\nfrom splink.duckdb.blocking_rule_library import block_on\\nfrom splink.duckdb.comparison_library import (\\n    distance_in_km_at_thresholds,\\n    exact_match,\\n    jaro_winkler_at_thresholds,\\n    levenshtein_at_thresholds,\\n)\\nfrom splink.duckdb.linker import DuckDBLinker\\n\\ndf = pd.read_parquet(\\\"7m_prepareed.parquet\\\")\\n\\n\\nsplink_settings = {\\n    \\\"link_type\\\": \\\"dedupe_only\\\",\\n    \\\"blocking_rules_to_generate_predictions\\\": [\\n        block_on([\\\"last_name\\\", \\\"occupation\\\"]),\\n        block_on([\\\"first_name\\\", \\\"last_name\\\"]),\\n        block_on([\\\"first_name\\\", \\\"middle_name\\\"]),\\n        block_on([\\\"middle_name\\\", \\\"last_name\\\"]),\\n        block_on([\\\"first_name\\\", \\\"dob\\\"]),\\n        block_on([\\\"first_name\\\", \\\"middle_name\\\"]),\\n        block_on([\\\"last_name\\\", \\\"birth_lat\\\"]),\\n        block_on([\\\"first_name\\\", \\\"birth_lng\\\"]),\\n        block_on([\\\"middle_name\\\", \\\"occupation\\\"]),\\n    ],\\n    \\\"comparisons\\\": [\\n        jaro_winkler_at_thresholds(\\n            \\\"first_name\\\", [0.9, 0.7], term_frequency_adjustments=True\\n        ),\\n        jaro_winkler_at_thresholds(\\\"middle_name\\\", [0.9]),\\n        jaro_winkler_at_thresholds(\\n            \\\"last_name\\\", [0.9, 0.7], term_frequency_adjustments=True\\n        ),\\n        levenshtein_at_thresholds(\\n            \\\"dob\\\", [1, 2, 4], term_frequency_adjustments=True\\n        ),\\n        distance_in_km_at_thresholds(\\n            \\\"birth_lat\\\", \\\"birth_lng\\\", [10, 100]\\n        ),\\n        exact_match(\\\"occupation\\\", term_frequency_adjustments=True),\\n    ],\\n    \\\"retain_intermediate_calculation_columns\\\": False,\\n    \\\"retain_matching_columns\\\": False,\\n    \\\"max_iterations\\\": 20,\\n    \\\"em_convergence\\\": 0.001,\\n}\\n\\nlinker = DuckDBLinker(\\\"df\\\", splink_settings)\\n\\n# Model training: Estimate the parameters of the model\\nlinker.estimate_probability_two_random_records_match(\\n    [\\n        block_on([\\\"first_name\\\", \\\"last_name\\\", \\\"dob\\\"]),\\n    ],\\n    recall=0.8,\\n)\\nlinker.estimate_u_using_random_sampling(max_pairs=1e9)\\nlinker.estimate_parameters_using_expectation_maximisation(\\n    block_on(\\n        [\\\"first_name\\\", \\\"last_name\\\", \\\"occupation\\\"], salting_partitions=2\\n    ),\\n    estimate_without_term_frequencies=True,\\n)\\nlinker.estimate_parameters_using_expectation_maximisation(\\n    block_on([\\\"dob\\\", \\\"middle_name\\\"], salting_partitions=2),\\n    estimate_without_term_frequencies=True,\\n)\\n\\n# Inference: Predict which pairs are matching entities\\ndf_predict = linker.predict(threshold_match_probability=0.9)\\n\\n# Clustering: Compute an estimated cluster id\\n# that ties together records of the same entity\\nlinker.cluster_pairwise_predictions_at_threshold(\\n    df_predict=df_predict, threshold_match_probability=0.9\\n)\\n\\n\"))), \"\\n\", React.createElement(_components.h2, null, \"Detailed results\"), \"\\n\", React.createElement(_components.p, null, \"Benchmarking was conducted for both model training (parameter estimation) and inference (making predictions).\"), \"\\n\", React.createElement(_components.p, null, \"The following chart shows runtime by the Splink function, broken down by the EC2 instance type.  Note a logarithmic scale is used to ensure all values are legible.\"), \"\\n\", React.createElement(VegaLite, {\n    spec: by_function_chart\n  }), \"\\n\", React.createElement(_components.p, null, \"The next chart shows total CPU and memory usage.  The CPU metric is average across cores, so 100% means all cores are being fully used.  Click on the bar chart at the top to select the instance type.\"), \"\\n\", React.createElement(VegaLite, {\n    spec: cpu_mem_chart\n  }), \"\\n\", React.createElement(_components.p, null, \"We can see that DuckDB parallelises workloads very well.  Memory usage stays low on the larger instances types.\"), \"\\n\", React.createElement(_components.p, null, \"Not only can we perform deduplication quickly on high-spec machine, we can see the full set of benchmarks completed successfully on a machine comparable to a laptop (\", React.createElement(_components.code, null, \"c6g.2xlarge\"), \", which has 8vCPU/16GiB memory), in around 25 minutes.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-5\",\n    id: \"user-content-fnref-5\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"5\"))), \"\\n\", React.createElement(_components.h2, null, \"Comparisons to other libraries\"), \"\\n\", React.createElement(_components.p, null, \"A chart of runtimes three other popular open source record linkage packages can be found on page 362 of \", React.createElement(_components.a, {\n    href: \"https://imai.fas.harvard.edu/research/files/linkage.pdf\"\n  }, \"this paper\"), \" from the authors of the \", React.createElement(_components.a, {\n    href: \"https://imai.fas.harvard.edu/research/files/linkage.pdf\"\n  }, \"fastLink\"), \" R package.\"), \"\\n\", React.createElement(_components.p, null, \"The chart shows that of the three, fastLink has by far the best performance, at 400 minutes to deduplicate 300,000 records on an 8 core machine, with runtime increasing approximately quadratically with the number of input records.\"), \"\\n\", React.createElement(_components.p, null, \"Splink is able to deduplicate the same number of records in less than a minute on a comparable machine, suggesting it's at least two orders of magnitude faster.\"), \"\\n\", React.createElement(_components.p, null, \"A caveat is that these runtimes are not strictly comparable because the input datasets are not the same.  However, the size of the differences are so large that it's almost certain that Splink is a great deal faster.\"), \"\\n\", React.createElement(_components.h2, null, \"Scaling to larger datasets\"), \"\\n\", React.createElement(_components.p, null, \"The low memory usage on large EC2 instance types suggests there's scope to scale to substantially larger datasets using DuckDB.\"), \"\\n\", React.createElement(_components.p, null, \"For the purpose of this post, I chose to make a relatively large number of comparisons per input record (around 100) to demonstrate the speed of Splink.  In real record linkage scenarios, especially those where we have more columns of data about the entities, it's often  possible to use tighter blocking rules, resulting in fewer record comparisons per input record.\"), \"\\n\", React.createElement(_components.p, null, \"Both these observations suggest that DuckDB could be used to link datasets of many tens of millions or records or more.\"), \"\\n\", React.createElement(_components.p, null, \"Splink also offers big data backends like \", React.createElement(_components.a, {\n    href: \"https://moj-analytical-services.github.io/splink/topic_guides/splink_fundamentals/backends/backends.html?h=backends\"\n  }, \"Spark and Athena\"), \" as backends for linking truly enormous datasets.\"), \"\\n\", React.createElement(_components.h2, null, \"Accuracy\"), \"\\n\", React.createElement(_components.p, null, \"This post considers runtime only.  Accuracy statistics would only be valid on the specific dataset used for benchmarking, and I do not have comparative accuracy statistics for other libraries.\"), \"\\n\", React.createElement(_components.p, null, \"However, there are theoretical and empirical reasons to believe Splink offers accuracy comparable to or better than alternatives:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Splink is able to effectively harness most of the information in the input data in making a prediction - as explained in \", React.createElement(Link, {\n    to: \"/fellegi_sunter_accuracy/\"\n  }, \"this post\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"An \", React.createElement(_components.a, {\n    href: \"https://scholar.googleusercontent.com/scholar?q=cache:o4-c8w6DveYJ:scholar.google.com/+splink&hl=en&as_sdt=0,5&as_ylo=2023\"\n  }, \"independent empirical study\"), \" has found Splink's accuracy compares favourably to alternatives.\"), \"\\n\", React.createElement(_components.li, null, \"Splink offers a range of configuration options to optimise accuracy which are detailed further in \", React.createElement(Link, {\n    to: \"/comparing_splink_models/\"\n  }, \"this post\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"I hope to write another post at some point looking at comparative accuracy in further details\"), \"\\n\", React.createElement(_components.h2, null, \"Comparison to the Apache Spark backend\"), \"\\n\", React.createElement(_components.p, null, \"Splink supports various SQL backends, so the same job was run on the Apache Spark backend to compare runtimes.\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-6\",\n    id: \"user-content-fnref-6\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"6\"))), \"\\n\", React.createElement(VegaLite, {\n    spec: spark_vs_duckdb_chart\n  }), \"\\n\", React.createElement(_components.p, null, \"We can see that Spark takes about 60% longer than DuckDB for estimating the \", React.createElement(_components.code, null, \"u\"), \" parameters, but for inference (making predictions) it takes 8.7 times longer.\"), \"\\n\", React.createElement(_components.p, null, \"The following chart shows CPU usage, and goes some way to explaining the very long runtime of the \", React.createElement(_components.code, null, \"predict()\"), \" step.\"), \"\\n\", React.createElement(VegaLite, {\n    spec: metrics_spark_filtered\n  }), \"\\n\", React.createElement(_components.p, null, \"We can see that whilst the predict step parallelises well at first, there are straggler tasks on some CPUs that take a long time to complete.\"), \"\\n\", React.createElement(_components.p, null, \"A rough estimate suggests if problem of straggler tasks could be addressed and the CPUs could be pinned at 100%, Spark would still take around twice as long as DuckDB\", React.createElement(_components.sup, null, React.createElement(_components.a, {\n    href: \"#user-content-fn-7\",\n    id: \"user-content-fnref-7\",\n    \"data-footnote-ref\": true,\n    \"aria-describedby\": \"footnote-label\"\n  }, \"7\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"Overall, it's clear that DuckDB is both intrinsically faster for data linking workloads, and also does a better job of parallelisation across all cores out of the box, resulting in substantially shorter runtimes.\"), \"\\n\", React.createElement(_components.h2, null, \"Reproduction materials\"), \"\\n\", React.createElement(_components.p, null, \"Benchmarking was conducted on a variety of AWS EC2 instances using \", React.createElement(_components.a, {\n    href: \"https://pypi.org/project/pytest-benchmark/\"\n  }, \"pytest-benchmark\"), \".  Code in available in the following two repositories:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/RobinL/benchmarking_splink_infrastructure/releases/tag/v0.0.3\"\n  }, \"Code to set up AWS infrastructure\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/RobinL/run_splink_benchmarks_in_ec2/releases/tag/v0.0.3\"\n  }, \"Code to run the benchmarks\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Further reading\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://moj-analytical-services.github.io/splink\"\n  }, \"Splink documentation homepage\")), \"\\n\", React.createElement(_components.li, null, React.createElement(Link, {\n    to: \"/intro_to_probabilistic_linkage/\"\n  }, \"Interactive introduction to probabilistic record linkage\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://moj-analytical-services.github.io/splink/demos/examples/examples_index.html\"\n  }, \"Splink examples\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://moj-analytical-services.github.io/splink/demos/tutorials/00_Tutorial_Introduction.html\"\n  }, \"Splink tutorial\")), \"\\n\"), \"\\n\", React.createElement(_components.section, {\n    \"data-footnotes\": true,\n    className: \"footnotes\"\n  }, React.createElement(_components.h2, {\n    className: \"sr-only\",\n    id: \"footnote-label\"\n  }, \"Footnotes\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-1\"\n  }, \"\\n\", React.createElement(_components.p, null, \"This problem is also sometimes referred to as entity resolution, or record linkage. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-1\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-2\"\n  }, \"\\n\", React.createElement(_components.p, null, \"Please \", React.createElement(Link, {\n    to: \"/about/\"\n  }, \"contact me\"), \" if you know otherwise! \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-2\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-3\"\n  }, \"\\n\", React.createElement(_components.p, null, \"It would be possible to achieve much faster runtimes by reducing complexity, at the expense of accuracy.  For instance, reducing the use of fuzzy-match functions like Jaro Winkler, and avoiding term frequency adjustments.  However, this would not be representative of a typical real-world use case. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-3\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-4\"\n  }, \"\\n\", React.createElement(_components.p, null, \"It's important to emphasise the number of comparisons (1 billion) as well as the number of input rows (7 million) because performance is primarily driven by the former. Furthermore it would be possible to 'cheat' and get a better runtimes simply by using stricter blocking, at the cost of lower recall.  See \", React.createElement(_components.a, {\n    href: \"https://moj-analytical-services.github.io/splink/topic_guides/blocking/blocking_rules.html?h=blocking#blocking\"\n  }, \"here\"), \" for further details. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-4\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-5\"\n  }, \"\\n\", React.createElement(_components.p, null, \"Out of memory errors were encountered on a \", React.createElement(_components.code, null, \"c6g.xlarge\"), \" (4vCPU/8GiB memory) machine. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-5\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-6\"\n  }, \"\\n\", React.createElement(_components.p, null, \"The job was run in local mode on a \", React.createElement(_components.code, null, \"c6gd.4xlarge\"), \" instance, which has an SSD attached.  For Spark, this is important because some intermediate results are written to disk.  Note no results are present for the cluster step because the instance ran out of disk space before it could complete. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-6\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\", React.createElement(_components.li, {\n    id: \"user-content-fn-7\"\n  }, \"\\n\", React.createElement(_components.p, null, \"With experimentation, the straggler tasks could probably be largely avoided, but it would take several runs to find the optimal configuration, and requires significant expertise in both Spark and Splink. \", React.createElement(_components.a, {\n    href: \"#user-content-fnref-7\",\n    \"data-footnote-backref\": true,\n    className: \"data-footnote-backref\",\n    \"aria-label\": \"Back to content\"\n  }, \"↩\")), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import React from 'react';\n\nconst Subtitle = ({ children }) => {\n    const newChildren = React.Children.map(children, child => {\n        if (React.isValidElement(child) && child.type === 'p') {\n            // Remove the <p> wrapper that mdx adds by default\n            return child.props.children;\n        }\n        return child;\n    });\n\n    return (\n        <h2 className=\"text-xl font-sans font-normal text-gray-500 mb-8 mt-0\">\n            {newChildren}\n        </h2>\n    );\n};\n\nexport default Subtitle;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Vega from './Vega';\n\n/**\n * Syntactic sugar for using vega-lite with Vega\n * @param props\n */\nexport default function VegaLite(props) {\n  return /*#__PURE__*/React.createElement(Vega, _extends({}, props, {\n    mode: \"vega-lite\"\n  }));\n}","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n"],"names":["Head","props","React","SEO","frontmatter","pageContext","_createMdxContent","_components","Object","assign","h1","h2","p","table","thead","tr","th","tbody","td","sup","a","ul","li","code","pre","section","ol","_provideComponents","components","Subtitle","href","id","VegaLite","spec","summary_chart","align","DefinitionToolTip","term","text","className","by_function_chart","cpu_mem_chart","Link","to","spark_vs_duckdb_chart","metrics_spark_filtered","MDXLayout","_ref","children","newChildren","map","child","type","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","mode","ascending","b","NaN","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","name","JSON","stringify","join","inferColumns","rows","columnSet","create","forEach","row","column","push","pad","value","width","s","Array","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","f","t","N","I","n","eof","eol","token","c","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows"],"sourceRoot":""}