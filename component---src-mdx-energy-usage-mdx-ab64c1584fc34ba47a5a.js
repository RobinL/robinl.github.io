"use strict";(self.webpackChunkrobinlinacre=self.webpackChunkrobinlinacre||[]).push([[3989],{6667:function(e,t,i){i.r(t),i.d(t,{Head:function(){return pn},default:function(){return gn},output_order:function(){return mn}});var n=i(7294),r=i(7848),a=i(7825);function o(e){return e`# Utils v2`}function u(e,t){return function(i,n="number",r="25px"){return e.bind(t`<input type=${n} style="width:${r};">`,i)}}function l(e){return e("@observablehq/inputs")}function s(e,t){return function(i){return e.bind(t`<select>
    <option value="minutes">minute</option>
    <option value="hours">hour</option>
    <option value="days">day</option>
    <option value="weeks">week</option>
    <option value="months">month</option>
    <option value="years">year</option>
  </select>`,i)}}function d(e){return new e.input(1e4)}function c(e,t,i){return e` You drive an average 
${t(i,"number","60px")} 
miles per 

miles per imperial gallon`}function f(e){return e}function _(e,t){const i=e.module();return i.variable(t()).define(["md"],o),i.variable(t("inline_input")).define("inline_input",["inputs","html"],u),i.variable(t("inputs")).define("inputs",["require"],l),i.variable(t("time_period_picker")).define("time_period_picker",["inputs","html"],s),i.variable(t("viewof miles")).define("viewof miles",["inputs"],d),i.variable(t("miles")).define("miles",["Generators","viewof miles"],((e,t)=>e.input(t))),i.variable(t("driving_text")).define("driving_text",["md","inline_input","viewof miles"],c),i.variable(t()).define(["miles"],f),i}function p(e){return e`# Unit chart`}function m(e){return e("d3@5","d3-scale-chromatic@^1.4.0")}function h(e){return{"label a":15.5,"b stuff":42.2,"c another label":e}}function g(){return function(e){let t=Object.keys(e).map((t=>({key:t,value:e[t]})));return t.sort(((e,t)=>t.value-e.value)),t.map((function(e){let t=e.value,i=Math.ceil(t),n=Array(i).fill(0);return n=n.map((function(i,n){return{key:e.key,value:n+1>t?t-n:1}})),n})).flat()}}function v(e){return e`<input type=range min=0 max=100 step=0.25>`}function b(e,t){return e(t)}function w(e,t){return e(t)}function y(e,t,i,n){return function(r,a=!0){let o=e;e>640&a&&(o=640);const u=20;let l=t(r);const s=0,d=20,c=0,f=0,_=o-f-d,p=l.reduce(((e,t)=>e+t.value),0),m=Math.floor(_/u),h=Math.ceil(p/m)*u;let g=m-p%m<7,v=0;g&&(v=u);const b=h+v+s+c-s-c;let w=i.scaleOrdinal().range(i.schemeCategory10).domain(["Driving","Flying","Heating","Stuff","Showers","Food/Eating","Washing machine","Dishwasher","Dogs"]),y=i.select(n.svg(_+f+d,b+s+c)),k=y.append("g").attr("transform","translate("+f+","+s+")");k.selectAll("c_rect").data(l).enter().append("rect").attr("x",((e,t)=>t%m*u)).attr("y",((e,t)=>Math.floor(t/m)*u)).attr("width",(e=>16*e.value)).attr("height",16).attr("fill",(e=>w(e.key))),k.selectAll("g_rect").data(l).enter().append("rect").attr("x",((e,t)=>t%m*u)).attr("y",((e,t)=>Math.floor(t/m)*u)).attr("width",(e=>16)).attr("height",16).attr("stroke","gray").attr("stroke-width",.5).attr("fill","none");let x=l.reduce(((e,t)=>e+t.value),0).toFixed(1)+" kwh/day",A=0;g||(A=(l.length-1)%m*u+u);let $=Math.floor((l.length-1)/m)*u;return g&&($+=u),k.append("text").attr("x",A).attr("dx",2).attr("y",$).attr("dy",10).style("text-anchor","left").style("alignment-baseline","middle").style("font-size","1em").text(x),y.node()}}function k(e,t){return e(t)}function x(e,t,i,n,r){return function(a,o=!0){let u=e;e>640&o&&(u=640);const l=20;let s=t(a);const d=0,c=20,f=0,_=100,p=u-_-c,m=(s.reduce(((e,t)=>e+t.value),0),Math.floor(p/l));let h=i(s,m),g=n.nest().key((function(e){return e.key})).rollup((e=>n.extent(e,(e=>e.y)))).entries(h);const v=(h.slice(-1)[0].y+1)*l+d+f-d-f;let b=n.scaleOrdinal().range(n.schemeCategory10).domain(["Driving","Flying","Heating","Stuff","Showers","Food/Eating","Washing machine","Dishwasher","Dogs"]),w=n.select(r.svg(p+_+c,v+d+f)),y=w.append("g").attr("transform","translate("+_+","+d+")");return y.selectAll("c_rect").data(h).enter().append("rect").attr("x",(e=>e.x*l)).attr("y",(e=>e.y*l)).attr("width",(e=>16*e.value)).attr("height",16).attr("fill",(e=>b(e.key))),y.selectAll("g_rect").data(h).enter().append("rect").attr("x",(e=>e.x*l)).attr("y",(e=>e.y*l)).attr("width",16).attr("height",16).attr("fill",null).attr("stroke","gray").attr("stroke-width",.5).attr("fill","none"),y.selectAll("a_text").data(g).enter().append("text").attr("x",0).attr("dx",-6).attr("y",(e=>n.mean(e.value)*l)).attr("dy",10).style("text-anchor","end").style("alignment-baseline","middle").style("font-size",(e=>function(e){return e.key.length<=10?"1rem":10/e.key.length+"rem"}(e))).text((e=>e.key)),w.node()}}function A(){return function(e,t){let i=0,n=0,r=e[0].key;return e.map((e=>(r!=e.key?(n+=1.5,i=0):i>t&&(i=0,n+=1),e.x=i,e.y=n,r=e.key,i+=1,e)))}}function $(e,t,i){return e(t(i),10)}function E(e,t){return e.nest().key((function(e){return e.key})).rollup((t=>e.extent(t,(e=>e.y)))).entries(t)}function q(e){return e`Each full square ( <svg width=16 height=16><rect x="0" y="0" width="16" height="16" fill="#BBB" stroke="gray"></rect></svg> ) in the visualisations represents 1 kilowatt hour (kwh), the amount of energy consumed by using 1000 watts of power for one hour.  `}function S(e,t){const i=e.module();return i.variable(t()).define(["md"],p),i.variable(t("d3")).define("d3",["require"],m),i.variable(t("data")).define("data",["slider"],h),i.variable(t("get_d3_data")).define("get_d3_data",g),i.variable(t("viewof slider")).define("viewof slider",["html"],v),i.variable(t("slider")).define("slider",["Generators","viewof slider"],((e,t)=>e.input(t))),i.variable(t("d3_data")).define("d3_data",["get_d3_data","data"],b),i.variable(t()).define(["unit_chart","data"],w),i.variable(t("unit_chart")).define("unit_chart",["width","get_d3_data","d3","DOM"],y),i.variable(t()).define(["unit_chart_2","data"],k),i.variable(t("unit_chart_2")).define("unit_chart_2",["width","get_d3_data","munge_data","d3","DOM"],x),i.variable(t("munge_data")).define("munge_data",A),i.variable(t("munged")).define("munged",["munge_data","get_d3_data","data"],$),i.variable(t("text_positions")).define("text_positions",["d3","munged"],E),i.variable(t("key")).define("key",["md"],q),i}function G(e){return e`# Driving`}function L(e){return e("@observablehq/inputs")}function D(e,t,i,n,r,a){return e` You drive an average 
${t(i,"number","60px")} 
miles per 
${n(r)} in a vehicle that gets an average of 
${t(a,"number","45px")}
miles per imperial gallon`}function j(e,t,i,n){return e.driving.miles_driven_to_kwh_per_day(t,i,n)}function I(e,t){return e({Driving:t})}function R(e,t){return e.utils.format_kwh(t)}function N(e,t){return e`= ${t} kwh per day`}function P(e){return[{name:"Driving",value:e}]}function z(e){return new e.input(1e4)}function F(e){return new e.input(45)}function B(e){return new e.input("years")}function U(e){return e("@robinl/energy_usage@0.0.22")}function C(e,t){const i=e.module();i.variable(t()).define(["md"],G),i.variable(t("inputs")).define("inputs",["require"],L);const n=e.module(_);i.import("inline_input",n),i.import("time_period_picker",n);const r=e.module(S);return i.import("unit_chart",r),i.variable(t("driving_text")).define("driving_text",["md","inline_input","viewof miles","time_period_picker","viewof miles_driven_period","viewof miles_per_gallon"],D),i.variable(t("kwh")).define("kwh",["eu","miles","miles_driven_period","miles_per_gallon"],j),i.variable(t("driving_chart")).define("driving_chart",["unit_chart","kwh"],I),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],R),i.variable(t("driving_conclusion")).define("driving_conclusion",["md","kwh_formatted"],N),i.variable(t("driving_data")).define("driving_data",["kwh"],P),i.variable(t("viewof miles")).define("viewof miles",["inputs"],z),i.variable(t("miles")).define("miles",["Generators","viewof miles"],((e,t)=>e.input(t))),i.variable(t("viewof miles_per_gallon")).define("viewof miles_per_gallon",["inputs"],F),i.variable(t("miles_per_gallon")).define("miles_per_gallon",["Generators","viewof miles_per_gallon"],((e,t)=>e.input(t))),i.variable(t("viewof miles_driven_period")).define("viewof miles_driven_period",["inputs"],B),i.variable(t("miles_driven_period")).define("miles_driven_period",["Generators","viewof miles_driven_period"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],U),i}function T(e){return e`# Flying`}function V(e){return e("@observablehq/inputs")}function H(e,t,i,n,r){return e` You fly an average of
${t(i,"number","60px")} 
miles per 
${n(r)}
in economy class.  (Business class/first class would probably be double this or more)
`}function M(e,t,i){return e.flying.flying_miles_to_kwh(t,i)}function O(e,t){return e.utils.format_kwh(t)}function W(e,t){return e`= ${t} kwh per day`}function Y(e,t){return e({Flying:t})}function Q(e){return[{name:"Flying",value:e}]}function Z(e){return new e.input(12e3)}function K(e){return new e.input("years")}function J(e){return e("@robinl/energy_usage@0.0.22")}function X(e,t){const i=e.module();i.variable(t()).define(["md"],T),i.variable(t("inputs")).define("inputs",["require"],V);const n=e.module(_);i.import("inline_input",n),i.import("time_period_picker",n),i.variable(t("flying_text")).define("flying_text",["md","inline_input","viewof miles","time_period_picker","viewof miles_flown_period"],H),i.variable(t("kwh")).define("kwh",["eu","miles","miles_flown_period"],M),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],O),i.variable(t("flying_conclusion")).define("flying_conclusion",["md","kwh_formatted"],W),i.variable(t("flying_chart")).define("flying_chart",["unit_chart","kwh"],Y),i.variable(t("flying_data")).define("flying_data",["kwh"],Q),i.variable(t("viewof miles")).define("viewof miles",["inputs"],Z),i.variable(t("miles")).define("miles",["Generators","viewof miles"],((e,t)=>e.input(t))),i.variable(t("viewof miles_flown_period")).define("viewof miles_flown_period",["inputs"],K),i.variable(t("miles_flown_period")).define("miles_flown_period",["Generators","viewof miles_flown_period"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],J);const r=e.module(S);return i.import("unit_chart",r),i}function ee(e){return e`# Electricity`}function te(e){return e("@observablehq/inputs")}function ie(e,t,i,n){return e` Your energy bill says you use 
${t(i,"number","60px")} KWh of electricity
per year and there are 
${t(n,"number","45px")} 
people in your household.
`}function ne(e,t,i){return e.electricity.electricity_kwh_per_day(t,i)}function re(e,t){return e.utils.format_kwh(t)}function ae(e,t){return e`= ${t} kwh per day`}function oe(e,t){return e({Electricity:t})}function ue(e){return[{name:"Electricity",value:e}]}function le(e){return new e.input(1800)}function se(e){return new e.input(2)}function de(e){return e("@robinl/energy_usage@0.1.7")}function ce(e,t){const i=e.module();i.variable(t()).define(["md"],ee),i.variable(t("inputs")).define("inputs",["require"],te);const n=e.module(X);i.import("inline_input",n),i.import("time_period_picker",n),i.variable(t("electricity_text")).define("electricity_text",["md","inline_input","viewof actual_usage_from_bill","viewof num_occupants"],ie),i.variable(t("kwh")).define("kwh",["eu","actual_usage_from_bill","num_occupants"],ne),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],re),i.variable(t("electricity_conclusion")).define("electricity_conclusion",["md","kwh_formatted"],ae),i.variable(t("electricity_chart")).define("electricity_chart",["unit_chart","kwh"],oe),i.variable(t("electricity_data")).define("electricity_data",["kwh"],ue),i.variable(t("viewof actual_usage_from_bill")).define("viewof actual_usage_from_bill",["inputs"],le),i.variable(t("actual_usage_from_bill")).define("actual_usage_from_bill",["Generators","viewof actual_usage_from_bill"],((e,t)=>e.input(t))),i.variable(t("viewof num_occupants")).define("viewof num_occupants",["inputs"],se),i.variable(t("num_occupants")).define("num_occupants",["Generators","viewof num_occupants"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],de);const r=e.module(S);return i.import("unit_chart",r),i}function fe(e){return e`# Pets`}function _e(e){return e("@observablehq/inputs")}function pe(e,t,i,n){return e` You have 
${t(i,"number","30px")} 
dog(s) who weigh 
${t(n,"number","50px")} 
kg each (on average)
`}function me(e,t,i){return e*t.pets.kwh_required_by_dogs_per_day(i)}function he(e,t){return e.utils.format_kwh(t)}function ge(e,t){return e({Dogs:t})}function ve(e,t){return e`= ${t} kwh per day`}function be(e){return[{name:"Dogs",value:e}]}function we(e){return new e.input(1)}function ye(e){return new e.input(15)}function ke(e){return e("@robinl/energy_usage@0.0.22")}function xe(e,t){const i=e.module();i.variable(t()).define(["md"],fe),i.variable(t("inputs")).define("inputs",["require"],_e);const n=e.module(ce);i.import("inline_input",n),i.import("time_period_picker",n),i.variable(t("dogs_text")).define("dogs_text",["md","inline_input","viewof num_dogs","viewof dogs_weight_kg"],pe),i.variable(t("kwh")).define("kwh",["num_dogs","eu","dogs_weight_kg"],me),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],he),i.variable(t("dogs_chart")).define("dogs_chart",["unit_chart","kwh"],ge),i.variable(t("dogs_conclusion")).define("dogs_conclusion",["md","kwh_formatted"],ve),i.variable(t("dogs_data")).define("dogs_data",["kwh"],be),i.variable(t("viewof num_dogs")).define("viewof num_dogs",["inputs"],we),i.variable(t("num_dogs")).define("num_dogs",["Generators","viewof num_dogs"],((e,t)=>e.input(t))),i.variable(t("viewof dogs_weight_kg")).define("viewof dogs_weight_kg",["inputs"],ye),i.variable(t("dogs_weight_kg")).define("dogs_weight_kg",["Generators","viewof dogs_weight_kg"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],ke);const r=e.module(S);return i.import("unit_chart",r),i}function Ae(e){return e`# Eating`}function $e(e){return e("@observablehq/inputs")}function Ee(e,t,i,n,r,a,o,u,l,s,d){return e` You are 
${t(i,"number","3rem")} 
cm high, 
you are 
${t(n,"number","3rem")} 
years old,
you weigh
${t(r,"number","60px")} 
kg,
you're
${a(o)} 
and you have a 
${u(l)} 
lifestyle, and your diet type is 
${s(d)}
`}function qe(e,t,i,n,r){return e` You have a ${t(i)} 
lifestyle, and your diet type is 
${n(r)}
`}function Se(e,t,i){return e.eating.kwh_per_day(84,165,40,"Female",t,i)}function Ge(e,t){return e.utils.format_kwh(t)}function Le(e,t){return e({"Food/Eating":t})}function De(e,t){return e`= ${t} kwh per day`}function je(e){return[{name:"Food/Eating",value:e}]}function Ie(e){return new e.input(68)}function Re(e){return new e.input(178)}function Ne(e){return new e.input(34)}function Pe(e){return new e.input("male")}function ze(e){return new e.input("moderately_active")}function Fe(e){return new e.input("omnivore")}function Be(e){return e("@robinl/energy_usage@0.0.25")}function Ue(e,t){return function(i){return e.bind(t`<select>
    <option value="sedentary_light">Sedentary/lightly active</option>
    <option value="moderately_active">Moderately active</option>
    <option value="vigorous">Vigorous</option>
  </select>`,i)}}function Ce(e,t){return function(i){return e.bind(t`<select>
    <option value="male">Male</option>
    <option value="female">Female</option>
  </select>`,i)}}function Te(e,t){return function(i){return e.bind(t`<select>
    <option value="omnivore">Omnivore</option>
    <option value="vegetarian">Vegetarian</option>
    <option value="vegan">Vegan</option>
  </select>`,i)}}function Ve(e,t){const i=e.module();i.variable(t()).define(["md"],Ae),i.variable(t("inputs")).define("inputs",["require"],$e);const n=e.module(_);i.import("inline_input",n),i.import("time_period_picker",n),i.variable(t("eating_text_more")).define("eating_text_more",["md","inline_input","viewof height_cm","viewof age_years","viewof weight_kg","gender_picker","viewof gender","activity_level_picker","viewof activity_level","diet_picker","viewof diet_type"],Ee),i.variable(t("eating_text")).define("eating_text",["md","activity_level_picker","viewof activity_level","diet_picker","viewof diet_type"],qe),i.variable(t("kwh")).define("kwh",["eu","activity_level","diet_type"],Se),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],Ge),i.variable(t("eating_chart")).define("eating_chart",["unit_chart","kwh"],Le),i.variable(t("eating_conclusion")).define("eating_conclusion",["md","kwh_formatted"],De),i.variable(t("eating_data")).define("eating_data",["kwh"],je),i.variable(t("viewof weight_kg")).define("viewof weight_kg",["inputs"],Ie),i.variable(t("weight_kg")).define("weight_kg",["Generators","viewof weight_kg"],((e,t)=>e.input(t))),i.variable(t("viewof height_cm")).define("viewof height_cm",["inputs"],Re),i.variable(t("height_cm")).define("height_cm",["Generators","viewof height_cm"],((e,t)=>e.input(t))),i.variable(t("viewof age_years")).define("viewof age_years",["inputs"],Ne),i.variable(t("age_years")).define("age_years",["Generators","viewof age_years"],((e,t)=>e.input(t))),i.variable(t("viewof gender")).define("viewof gender",["inputs"],Pe),i.variable(t("gender")).define("gender",["Generators","viewof gender"],((e,t)=>e.input(t))),i.variable(t("viewof activity_level")).define("viewof activity_level",["inputs"],ze),i.variable(t("activity_level")).define("activity_level",["Generators","viewof activity_level"],((e,t)=>e.input(t))),i.variable(t("viewof diet_type")).define("viewof diet_type",["inputs"],Fe),i.variable(t("diet_type")).define("diet_type",["Generators","viewof diet_type"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],Be),i.variable(t("activity_level_picker")).define("activity_level_picker",["inputs","html"],Ue),i.variable(t("gender_picker")).define("gender_picker",["inputs","html"],Ce),i.variable(t("diet_picker")).define("diet_picker",["inputs","html"],Te);const r=e.module(S);return i.import("unit_chart",r),i}function He(e){return e`# Heating and gas`}function Me(e){return e("@observablehq/inputs")}function Oe(e,t,i,n,r,a){return e` Your energy bill says you use 
${t(i,"number","60px")} 
${n(r)} 
per year and there are 
${t(a,"number","45px")} 
people in your household.


`}function We(e){return e`## Need to take out showers and baths from heating`}function Ye(e,t,i,n,r,a,o){return e`
You take 
${t(i,"number","30px")} 
shower(s) a day averaging 
${t(n,"number","30px")} 
minutes with water flow of 
${t(r,"number","45px")}
ml per second.

You have 
${t(a,"number","30px")} 
bath(s) a day, each one of which contains 
${t(o,"number","45px")} litres of water.
`}function Qe(e,t,i,n,r,a){return e.heating.heating_kwh_per_day(t,19,19,i,n)-(r-a)*i}function Ze(e,t,i,n){return e.shower_bath.shower_get_daily_kwh(t,i,n)}function Ke(e,t,i){return e.shower_bath.bath_get_daily_kwh(t,i)}function Je(e,t){return e.utils.format_kwh(t)}function Xe(e,t){return e`= ${t} kwh per day`}function et(e,t,i){return[{name:"Heating",value:e},{name:"Showers",value:t},{name:"Baths",value:i}]}function tt(e,t){return e({Heating:t})}function it(e,t,i){return e({Showers:t,Baths:i})}function nt(e){return new e.input(597)}function rt(e){return new e.input("metric_gas_units")}function at(e){return new e.input(2)}function ot(e){return new e.input(2)}function ut(e){return new e.input(0)}function lt(e){return new e.input(4)}function st(e){return new e.input(135)}function dt(e){return new e.input(150)}function ct(e){return e("@robinl/energy_usage@0.1.9")}function ft(e,t){return function(i){return e.bind(t`<select>
    <option value="kwh">kwh</option>
    <option value="imperial_gas_units">Imperial units (100s of cubic feet)</option>
    <option value="metric_gas_units">Metrics units</option>
  </select>`,i)}}function _t(e,t){const i=e.module();i.variable(t()).define(["md"],He),i.variable(t("inputs")).define("inputs",["require"],Me);const n=e.module(_);i.import("inline_input",n),i.variable(t("heating_text")).define("heating_text",["md","inline_input","viewof actual_usage_from_bill","units_picker","viewof bill_units","viewof num_occupants"],Oe),i.variable(t()).define(["md"],We),i.variable(t("showers_and_baths_text")).define("showers_and_baths_text",["md","inline_input","viewof num_showers","viewof shower_minutes","viewof shower_flow","viewof num_baths","viewof bath_litres"],Ye),i.variable(t("heating_kwh")).define("heating_kwh",["eu","actual_usage_from_bill","num_occupants","bill_units","showers_kwh","baths_kwh"],Qe),i.variable(t("showers_kwh")).define("showers_kwh",["eu","num_showers","shower_flow","shower_minutes"],Ze),i.variable(t("baths_kwh")).define("baths_kwh",["eu","num_baths","bath_litres"],Ke),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","heating_kwh"],Je),i.variable(t("heating_conclusion")).define("heating_conclusion",["md","kwh_formatted"],Xe),i.variable(t("heating_gas_data")).define("heating_gas_data",["heating_kwh","showers_kwh","baths_kwh"],et),i.variable(t("heating_chart")).define("heating_chart",["unit_chart","heating_kwh"],tt),i.variable(t("showers_bath_chart")).define("showers_bath_chart",["unit_chart","showers_kwh","baths_kwh"],it),i.variable(t("viewof actual_usage_from_bill")).define("viewof actual_usage_from_bill",["inputs"],nt),i.variable(t("actual_usage_from_bill")).define("actual_usage_from_bill",["Generators","viewof actual_usage_from_bill"],((e,t)=>e.input(t))),i.variable(t("viewof bill_units")).define("viewof bill_units",["inputs"],rt),i.variable(t("bill_units")).define("bill_units",["Generators","viewof bill_units"],((e,t)=>e.input(t))),i.variable(t("viewof num_occupants")).define("viewof num_occupants",["inputs"],at),i.variable(t("num_occupants")).define("num_occupants",["Generators","viewof num_occupants"],((e,t)=>e.input(t))),i.variable(t("viewof num_showers")).define("viewof num_showers",["inputs"],ot),i.variable(t("num_showers")).define("num_showers",["Generators","viewof num_showers"],((e,t)=>e.input(t))),i.variable(t("viewof num_baths")).define("viewof num_baths",["inputs"],ut),i.variable(t("num_baths")).define("num_baths",["Generators","viewof num_baths"],((e,t)=>e.input(t))),i.variable(t("viewof shower_minutes")).define("viewof shower_minutes",["inputs"],lt),i.variable(t("shower_minutes")).define("shower_minutes",["Generators","viewof shower_minutes"],((e,t)=>e.input(t))),i.variable(t("viewof shower_flow")).define("viewof shower_flow",["inputs"],st),i.variable(t("shower_flow")).define("shower_flow",["Generators","viewof shower_flow"],((e,t)=>e.input(t))),i.variable(t("viewof bath_litres")).define("viewof bath_litres",["inputs"],dt),i.variable(t("bath_litres")).define("bath_litres",["Generators","viewof bath_litres"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],ct),i.variable(t("units_picker")).define("units_picker",["inputs","html"],ft);const r=e.module(S);return i.import("unit_chart",r),i}function pt(e){return e`# Stuff`}function mt(e){return e("@observablehq/inputs")}function ht(e,t,i,n,r){return e` You spend an average of 
£ ${t(i,"number","60px")} 
per ${n(r)}
on 'stuff'.

('Stuff' includes things like clothes, electronics, white goods and cars, but excludes items otherwise accounted for such as food, petrol and flights)
`}function gt(e,t,i){return e.stuff.pounds_sterling_to_kwh(t)/e.convert.convert_units(i,"days")}function vt(e,t){return e.utils.format_kwh(t)}function bt(e,t){return e`= ${t} kwh per day`}function wt(e,t){return e({Stuff:t})}function yt(e){return[{name:"Stuff",value:e}]}function kt(e){return new e.input(500)}function xt(e){return new e.input("months")}function At(e){return e("@robinl/energy_usage@0.0.31")}function $t(e,t){const i=e.module();i.variable(t()).define(["md"],pt),i.variable(t("inputs")).define("inputs",["require"],mt);const n=e.module(_);i.import("inline_input",n),i.import("time_period_picker",n),i.variable(t("stuff_text")).define("stuff_text",["md","inline_input","viewof spending","time_period_picker","viewof spending_time_period"],ht),i.variable(t("kwh")).define("kwh",["eu","spending","spending_time_period"],gt),i.variable(t("kwh_formatted")).define("kwh_formatted",["eu","kwh"],vt),i.variable(t("stuff_conclusion")).define("stuff_conclusion",["md","kwh_formatted"],bt),i.variable(t("stuff_chart")).define("stuff_chart",["unit_chart","kwh"],wt),i.variable(t("stuff_data")).define("stuff_data",["kwh"],yt),i.variable(t("viewof spending")).define("viewof spending",["inputs"],kt),i.variable(t("spending")).define("spending",["Generators","viewof spending"],((e,t)=>e.input(t))),i.variable(t("viewof spending_time_period")).define("viewof spending_time_period",["inputs"],xt),i.variable(t("spending_time_period")).define("spending_time_period",["Generators","viewof spending_time_period"],((e,t)=>e.input(t))),i.variable(t("eu")).define("eu",["require"],At);const r=e.module(S);return i.import("unit_chart",r),i}function Et(e){return e`# Energy usage treemap and summary`}function qt(e,t,i){return function(n){let r=e(n),a=r/24*1e3;return t`You use a total of __${i(r)} kilowatt hours__ of energy a day from the activities covered on this webpage. This means your average power consumption is ${i(a)} watts. `}}function St(){return function(e){return e.reduce(((e,t)=>e+t.value),0)}}function Gt(){return[{name:"Showers",value:2.5104},{name:"Driving",value:26.293975646879755},{name:"Flying",value:13.425863835616436},{name:"Washing machine",value:4.2},{name:"Dishwasher",value:.6},{name:"Food/Eating",value:23.303485333333334},{name:"Dogs",value:.86730602373828}]}function Lt(e,t){return e(t)}function Dt(e,t,i,n,r,a){return function(o,u=640,l=!0){u>640&l&&(u=640);const s=e({name:"root",children:o},u);let d=t.scaleOrdinal().range(t.schemeCategory10).domain(["Driving","Flying","Heating","Stuff","Showers","Food/Eating","Washing machine","Dishwasher","Dogs"]);const c=o.reduce(((e,t)=>e+t.value),0),f=i*i*c;let _=f/u;console.log(c),console.log(f),console.log(_),console.log(u);const p=t.create("svg").attr("width",u).attr("height",_).style("font","10px sans-serif"),m=p.selectAll("g").data(s.leaves()).join("g").attr("transform",(e=>`translate(${e.x0},${e.y0})`));return m.append("title").text((e=>`${e.ancestors().reverse().map((e=>e.data.name)).join("/")}\n${n(e.value)}`)),m.append("rect").attr("id",(e=>(e.leafUid=r.uid("leaf")).id)).attr("fill",(e=>{for(;e.depth>1;)e=e.parent;return d(e.data.name)})).attr("fill-opacity",.7).attr("width",(e=>e.x1-e.x0)).attr("height",(e=>e.y1-e.y0)),m.append("clipPath").attr("id",(e=>(e.clipUid=r.uid("clip")).id)).append("use").attr("xlink:href",(e=>e.leafUid.href)),m.append("text").attr("clip-path",(e=>e.clipUid)).selectAll("tspan").data((e=>e.data.name.split(/(?=[A-Z][^A-Z])/g).concat(n(e.value)+" kwh").concat(a(e.value/e.parent.value)))).join("tspan").attr("x",3).attr("y",((e,t,i)=>.3*(t===i.length-1)+1.1+.9*t+"em")).attr("fill-opacity",((e,t,i)=>t===i.length-1?.7:null)).text((e=>e)),p.node()}}function jt(){return 22}function It(e,t){return function(i,n){const r=i.children.reduce(((e,t)=>e+t.value),0),a=e*e*r;let o=a/n;return console.log("-- from treemap"),console.log(r),console.log(a),console.log(o),console.log("--"),t.treemap().tile(t.treemapBinary).size([n,o]).padding(1).round(!0)(t.hierarchy(i).sum((e=>e.value)).sort(((e,t)=>t.value-e.value)))}}function Rt(e){return e.format(",.3r")}function Nt(e){return e.format(",.1%")}function Pt(e){return e.scaleOrdinal(e.schemeCategory10)}function zt(e){return e("d3@5")}function Ft(e,t){const i=e.module();return i.variable(t()).define(["md"],Et),i.variable(t("summary_text")).define("summary_text",["get_total","md","format"],qt),i.variable(t("get_total")).define("get_total",St),i.variable(t("my_data")).define("my_data",Gt),i.variable(t()).define(["treemap_chart","my_data"],Lt),i.variable(t("treemap_chart")).define("treemap_chart",["treemap","d3","grid_size","format","DOM","per_fmt"],Dt),i.variable(t("grid_size")).define("grid_size",jt),i.variable(t("treemap")).define("treemap",["grid_size","d3"],It),i.variable(t("format")).define("format",["d3"],Rt),i.variable(t("per_fmt")).define("per_fmt",["d3"],Nt),i.variable(t("color")).define("color",["d3"],Pt),i.variable(t("d3")).define("d3",["require"],zt),i}function Bt(e){return e`# Vega-Lite API v4`}function Ut(e){return e`The [Vega-Lite JavaScript API](https://github.com/vega/vega-lite-api/) provides a convenient way to write [Vega-Lite](https://vega.github.io/vega-lite) specifications in a programmatic fashion. Scroll down for some usage examples, or browse the [Vega-Lite API example collection](https://observablehq.com/collection/@vega/vega-lite-api)!

This notebook uses **version 4** of Vega-Lite and the corresponding Vega-Lite API 4.0. _To use the more recent Vega-Lite version 5, see the [Vega-Lite API v5 notebook](https://observablehq.com/@vega/vega-lite-api-v5) instead._

Want to learn more about data visualization and how to use the Vega-Lite API? Read the [introduction to Vega-Lite](https://observablehq.com/@uwdata/introduction-to-vega-lite) and the [data visualization curriculum](https://observablehq.com/@uwdata/data-visualization-curriculum?collection=@uwdata/visualization-curriculum).`}function Ct(e){return e`
The cell below imports the Vega-Lite API and registers the desired versions of Vega and Vega-Lite, along with default [Vega View options](https://vega.github.io/vega/docs/api/view/#view) and [Vega-Lite configuration](https://vega.github.io/vega-lite/docs/config.html):
`}async function Tt(e){const[t,i,n,r]=await Promise.all(["vega@5.23.0","vega-lite@4.17.0","vega-lite-api@4.0.0","vega-tooltip@0.25.1"].map((t=>e(t)))),a={config:{config:{view:{continuousWidth:400,continuousHeight:300},mark:{tooltip:null}}},init:e=>{e.tooltip((new r.Handler).call),e.container()&&(e.container().style["overflow-x"]="auto")},view:{loader:t.loader({baseURL:"https://cdn.jsdelivr.net/npm/vega-datasets@2/"}),renderer:"canvas"}};return n.register(t,i,a)}function Vt(e){return e`To use the same setup in your own notebooks, add a cell with the following code:
~~~ js
import {vl} from '@vega/vega-lite-api'
~~~
To use the API outside of Observable, see the [stand-alone usage instructions](#standalone_use) below.
`}function Ht(e){return e`## Zip Codes

A dot for each zip code in the United States, colored by the first digit.
`}function Mt(e,t){return e.markSquare({size:2,opacity:1}).data("data/zipcodes.csv").transform(e.calculate("substring(datum.zip_code, 0, 1)").as("digit")).project(e.projection("albersUsa")).encode(e.longitude().fieldQ("longitude"),e.latitude().fieldQ("latitude"),e.color().fieldN("digit")).width(t).height(Math.floor(t/1.75)).autosize({type:"fit-x",contains:"padding"}).config({view:{stroke:null}}).render()}function Ot(e){return e`## Interactive Seattle Weather 2012-2015

A scatter plot and summary histogram with linked \`selections\` between plots to perform cross-filtering and configure conditional color encodings.
`}function Wt(e,t){const i=e.selectInterval().encodings("x"),n=e.selectMulti().encodings("color"),r={domain:["sun","fog","drizzle","rain","snow"],range:["#e7ba52","#a7a7a7","#aec7e8","#1f77b4","#9467bd"]},a=e.markPoint({filled:!0}).encode(e.color().value("lightgray").if(i,e.color().fieldN("weather").scale(r).title("Weather")),e.size().fieldQ("precipitation").scale({domain:[-1,50],range:[10,500]}).title("Precipitation"),e.order().fieldQ("precipitation").sort("descending"),e.x().timeMD("date").axis({title:"Date",format:"%b"}),e.y().fieldQ("temp_max").scale({domain:[-5,40]}).axis({title:"Maximum Daily Temperature (°C)"})).width(t).height(300).select(i).transform(e.filter(n)),o=e.markBar().encode(e.color().value("lightgray").if(n,e.color().fieldN("weather").scale(r).title("Weather")),e.x().count(),e.y().fieldN("weather").scale({domain:r.domain}).title("Weather")).width(t).select(n).transform(e.filter(i));return e.vconcat(a,o).data("data/seattle-weather.csv").autosize({type:"fit-x",contains:"padding"}).render()}function Yt(e){return e`## Parallel Coordinates

A [parallel coordinates plot](https://en.wikipedia.org/wiki/Parallel_coordinates) that uses \`window\` and \`fold\` transforms to convert the four dimensions of penguin measurements into normalized coordinates that can be visualized as \`line\` marks. The graphic includes an additional layer with custom \`text\` mark labels for the parallel axis grid lines. We render the plot as SVG by passing \`{renderer:'svg'}\` to the \`render\` method.
`}function Qt(e,t){const i=e.markLine({strokeWidth:1.5,opacity:.5}).encode(e.color().fieldN("Species").sort("descending"),e.detail().fieldN("index"),e.x().fieldO("key").scale({type:"point",padding:0}).axis({domain:!1,ticks:!1,title:!1,grid:!0,gridColor:"#888",labelAngle:0,labelPadding:8,labelFontWeight:"bold"}),e.y().fieldQ("fraction").axis(null)),n=e.markText({dx:-2,align:"right",baseline:"middle"}).transform(e.groupby("key").aggregate(e.min("value").as("min"),e.max("value").as("max")),e.fold("min","max").as("op","value"),e.groupby("key").window(e.percent_rank("value").as("fraction"))).encode(e.x().fieldN("key"),e.y().fieldQ("fraction").axis(null),e.text().field("value").format(","));return e.layer(i,n).data("data/penguins.json").transform(e.filter('datum["Beak Length (mm)"] != null'),e.window(e.row_number().as("index")),e.fold(["Beak Length (mm)","Beak Depth (mm)","Flipper Length (mm)","Body Mass (g)"]).as("key","value"),e.groupby("key").join(e.min("value").as("min"),e.max("value").as("max")),e.calculate("(datum.value - datum.min) / (datum.max - datum.min)").as("fraction")).width(t).height(300).autosize({type:"fit-x",contains:"padding"}).render({renderer:"svg"})}function Zt(e){return e`<hr/>
## Stand-Alone Usage in a Web Browser

To use the Vega-Lite API in the browser outside of Observable, you need to include all the dependencies, set the default configuration, and then register the Vega libraries. Here is some starting code to build from:

~~~html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <script src="https://cdn.jsdelivr.net/npm/vega@5"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite@4"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite-api@4"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-tooltip"></script>
  </head>
  <body>
    <div id="view"></div>

    <script>
      // setup API options
      const options = {
        config: {
          // Vega-Lite default configuration
        },
        init: (view) => {
          // initialize tooltip handler
          view.tooltip(new vegaTooltip.Handler().call);
        },
        view: {
          // view constructor options
          // remove the loader if you don't want to default to vega-datasets!
          loader: vega.loader({
            baseURL: "https://cdn.jsdelivr.net/npm/vega-datasets@2/",
          }),
          renderer: "canvas",
        },
      };

      // register vega and vega-lite with the API
      vl.register(vega, vegaLite, options);

      // now you can use the API!
      vl.markBar({ tooltip: true })
        .data([
          { a: "A", b: 28 }, { a: "B", b: 55 }, { a: "C", b: 43 },
          { a: "D", b: 91 }, { a: "E", b: 81 }, { a: "F", b: 53 },
          { a: "G", b: 19 }, { a: "H", b: 87 }, { a: "I", b: 52 },
        ])
        .encode(
          vl.x().fieldQ("b"),
          vl.y().fieldN("a"),
          vl.tooltip([vl.fieldQ("b"), vl.fieldN("a")])
        )
        .render()
        .then(viewElement => {
          // render returns a promise to a DOM element containing the chart
          // viewElement.value contains the Vega View object instance
          document.getElementById('view').appendChild(viewElement);
        });
    </script>
  </body>
</html>

~~~`}function Kt(e,t){const i=e.module();return i.variable(t()).define(["md"],Bt),i.variable(t()).define(["md"],Ut),i.variable(t()).define(["md"],Ct),i.variable(t("vl")).define("vl",["require"],Tt),i.variable(t()).define(["md"],Vt),i.variable(t("zip_codes")).define("zip_codes",["md"],Ht),i.variable(t()).define(["vl","width"],Mt),i.variable(t("interactive_weather")).define("interactive_weather",["md"],Ot),i.variable(t()).define(["vl","width"],Wt),i.variable(t("parallel_coordinats")).define("parallel_coordinats",["md"],Yt),i.variable(t()).define(["vl","width"],Qt),i.variable(t("standalone_use")).define("standalone_use",["md"],Zt),i}function Jt(e){return e`# Energy usage in different countries`}function Xt(e){return e`[Sustainable Energy Without the Hot Air](http://www.inference.org.uk/sustainable/book/tex/sewtha.pdf) contains charts of energy consumption of different countries.  See pages 231 and 105.  See page 381 for the conversion of barrels of oil to kwh.

This data is sourced from [UNDP Human Development Report, 2007](http://hdr.undp.org/sites/default/files/reports/268/hdr_20072008_en_complete.pdf), see table 23 page  306.  It is based on [Total primary
energy supply](https://en.wikipedia.org/wiki/Primary_energy)`}function ei(e){return e`https://datacatalog.worldbank.org/energy-use-kg-oil-equivalent-capita-1
https://datacatalog.worldbank.org/total-final-energy-consumption-tfec

Not clear from either measure what it contains -e.g. presumably it doesn't contain energy embodied in imported goods?
`}function ti(e){return e("d3")}function ii(e){return e`Data comes from a custom report generated from the World Development Indicators, [here](https://databank.worldbank.org/reports.aspx?source=world-development-indicators#)`}function ni(){return"https://gist.githubusercontent.com/RobinL/f9d478dadd70ec2dda67c1e9e91686f1/raw/1d628cb38f3d693052bf6bf5eedcb4126bf34a25/energy_usage.csv"}function ri(e,t){return e.csv(t,e.autoType)}function ai(e){return e.filter((e=>".."!=e["2014 [YR2014]"]))}function oi(e){return e.map((function(e){let t={};return t["2014_kg_oil_equiv_per_capita"]=e["2014 [YR2014]"],t.country=e["Country Name"],t.code=e["Country Code"],t}))}function ui(e){return e.map((function(e){return e.kwh_per_day=11.63*e["2014_kg_oil_equiv_per_capita"]/365,{kwh_per_day:e.kwh_per_day,code:e.code,country:e.country}}))}function li(){return["USA","GBR","CHN","FRA","BRA","IND","AUS"]}function si(e,t){return e.filter((e=>t.includes(e.code)))}function di(e){return JSON.stringify(e)}function ci(e){return e.json("https://red-wave-c29f.robinlinacre.workers.dev/corsproxy/?apiurl=https://api.worldbank.org/countries/USA;GBR;CHN;FRA;BRA;IND;AUS/indicators/EG.USE.PCAP.KG.OE?date=2014%3A2014%26format=json%26per_page=1000")}function fi(e){return e.json("https://red-wave-c29f.robinlinacre.workers.dev/corsproxy/?apiurl=https://api.worldbank.org/countries/USA;GBR;CHN;FRA;BRA;IND;AUS/indicators/1.1_TOTAL.FINAL.ENERGY.CONSUM?date=2014%3A2014%26format=json%26per_page=1000")}function _i(e){return e.json("https://red-wave-c29f.robinlinacre.workers.dev/corsproxy/?apiurl=https://api.worldbank.org/countries/USA;GBR;CHN;FRA;BRA;IND;AUS/indicators/SP.POP.TOTL?date=2014%3A2014%26format=json%26per_page=1000")}function pi(e,t){return[0,1,2,3,4,5,6].map((function(i){return{code:e[1][i].country.id,country:e[1][i].country.value,kwh_per_day:1e12*e[1][i].value/(36e5*t[1][i].value)/365.25}}))}function mi(e){return e[1].map((function(e){return e.kwh_per_day=11.63*e.value/365,{kwh_per_day:e.kwh_per_day,code:e.country.id,country:e.country.value}}))}function hi(e){return e("vega-embed@3")}function gi(e,t){return e({data:{values:t},mark:"bar",encoding:{x:{field:"country",type:"nominal",sort:{field:"kwh_per_day",op:"mean",order:"descending"}},y:{field:"kwh_per_day",type:"quantitative"}}})}function vi(e,t){return e({data:{values:t},mark:"bar",encoding:{x:{field:"country",type:"nominal",sort:{field:"kwh_per_day",op:"mean",order:"descending"}},y:{field:"kwh_per_day",type:"quantitative"}}})}function bi(e,t){const i=e.module();i.variable(t()).define(["md"],Jt),i.variable(t()).define(["md"],Xt),i.variable(t()).define(["md"],ei),i.variable(t("d3")).define("d3",["require"],ti),i.variable(t()).define(["md"],ii),i.variable(t("url")).define("url",ni),i.variable(t("data")).define("data",["d3","url"],ri),i.variable(t("nonnull_data")).define("nonnull_data",["data"],ai),i.variable(t("data_by_country")).define("data_by_country",["nonnull_data"],oi),i.variable(t("data_with_kwh")).define("data_with_kwh",["data_by_country"],ui),i.variable(t("countries")).define("countries",li),i.variable(t("selected_countries")).define("selected_countries",["data_with_kwh","countries"],si),i.variable(t()).define(["selected_countries"],di),i.variable(t("primary_energy_use_data_pc")).define("primary_energy_use_data_pc",["d3"],ci),i.variable(t("tfec_data")).define("tfec_data",["d3"],fi),i.variable(t("population_data")).define("population_data",["d3"],_i),i.variable(t("final_energy_use_per_capita_data")).define("final_energy_use_per_capita_data",["tfec_data","population_data"],pi),i.variable(t("primary_energy_use_per_capita_data")).define("primary_energy_use_per_capita_data",["primary_energy_use_data_pc"],mi);const n=e.module(Kt);return i.import("vl",n),i.variable(t("vega_embed")).define("vega_embed",["require"],hi),i.variable(t("primary_energy_use_per_capita")).define("primary_energy_use_per_capita",["vega_embed","primary_energy_use_per_capita_data"],gi),i.variable(t("final_energy_use_per_capita")).define("final_energy_use_per_capita",["vega_embed","final_energy_use_per_capita_data"],vi),i}function wi(e){return e`# Energy usage ready reckoner for everyday activities`}function yi(e){return e`_A final version of this notebook can be viewed on my blog [here](https://www.robinlinacre.com/energy-usage/)._`}function ki(e){return e`This is a __rough ready reckoner__ to help you understand your personal energy consumption. 

I'm sure these estimates could be significantly improved - suggestions gratefully received [here](https://github.com/RobinL/energy_usage/pulls).

Following, [David MacKay](https://www.withouthotair.com/c2/page_24.shtml), I standardise everything in kilowatt hours. 

You can find all assumptions and calculations [here](https://github.com/RobinL/energy_usage/tree/master/src), or click on the headers for calculations specific to each activity.
`}function xi(e){return e`## Key to graphics`}function Ai(e){return e}function $i(e){return e`## [Driving](https://github.com/RobinL/energy_usage/blob/master/src/driving.js)`}function Ei(e){return e}function qi(e){return e}function Si(e){return e`## [Flying](https://github.com/RobinL/energy_usage/blob/master/src/flying.js)`}function Gi(e){return e}function Li(e){return e}function Di(e){return e`## [Heating](https://github.com/RobinL/energy_usage/blob/master/src/heating.js)`}function ji(e){return e}function Ii(e){return e}function Ri(e){return e`## [Showers/baths](https://github.com/RobinL/energy_usage/blob/master/src/shower.js)`}function Ni(e){return e}function Pi(e){return e}function zi(e){return e`## [Electricity](https://github.com/RobinL/energy_usage/blob/master/src/electricity.js)`}function Fi(e){return e}function Bi(e){return e}function Ui(e){return e`## [Stuff](https://github.com/RobinL/energy_usage/blob/master/src/stuff.js)`}function Ci(e){return e}function Ti(e){return e}function Vi(e){return e`## [Eating](https://github.com/RobinL/energy_usage/blob/master/src/eating.js)`}function Hi(e){return e}function Mi(e){return e}function Oi(e){return e`## [Pets](https://github.com/RobinL/energy_usage/blob/master/src/pets.js)`}function Wi(e){return e}function Yi(e){return e}function Qi(e){return e`# Summary`}function Zi(e,t){return e(t)}function Ki(e,t){return e(t)}function Ji(e){return e`Here's another representation of how your energy usage breaks down:`}function Xi(e,t,i){return e(t,i,!0)}function en(e){return e`## How do you compare?`}function tn(e){return e`This calculator only considers a subset of your energy usage, so your overall total will actually be higher.  Nonetheless, it's interesting to compare to average per captia energy usage of various countries:`}function nn(e){return e`The following chart shows primary per capita energy usage, converted into kwh.  See [here](https://datacatalog.worldbank.org/energy-use-kg-oil-equivalent-capita-1) for the source of the data.  `}function rn(e){return e}function an(e){return e`Note that primary energy usage is __not__ equivalent to the end-user consumption tallied in this calculator.


It is [defined as](https://ec.europa.eu/eurostat/statistics-explained/index.php/Glossary:Primary_energy_consumption) "The total energy demand of a country. It covers consumption of the energy sector itself, losses during transformation (for example, from oil or gas into electricity) and distribution of energy, and the final consumption by end users". 

I think this means it would count both energy produced domestically and primary energy imports in the form of fuel.  But not energy embodied in imported goods.  It is unclear to me whether it would count jet fuel oil for international flights.`}function on(e){return e`The following chart shows final energy consumption per capita.`}function un(e){return e}function ln(e){return e`## Annex: Imports and Calculations`}function sn(e,t,i,n,r,a,o){return e.concat(t,i,n,r,a,o)}function dn(e){let t={};return e.forEach((e=>t[e.name]=e.value)),t}async function cn(e,t){const i=await e("https://www.google-analytics.com/analytics.js").catch((()=>window.ga));return i("create","UA-146468274-1","auto"),i("send","pageview",t`<a href>`.pathname),i}function fn(e,t){const i=e.module();i.variable(t("title")).define("title",["md"],wi),i.variable(t()).define(["md"],yi),i.variable(t("under_title_blurb")).define("under_title_blurb",["md"],ki),i.variable(t("key_to_graphics_title")).define("key_to_graphics_title",["md"],xi),i.variable(t("key_to_graphics_text")).define("key_to_graphics_text",["key"],Ai),i.variable(t("driving_title")).define("driving_title",["md"],$i),i.variable(t("driving_text_output")).define("driving_text_output",["driving_text"],Ei),i.variable(t("driving_chart_output")).define("driving_chart_output",["driving_chart"],qi),i.variable(t("flying_title")).define("flying_title",["md"],Si),i.variable(t("flying_text_output")).define("flying_text_output",["flying_text"],Gi),i.variable(t("flying_chart_output")).define("flying_chart_output",["flying_chart"],Li),i.variable(t("heating_title")).define("heating_title",["md"],Di),i.variable(t("heating_text_output")).define("heating_text_output",["heating_text"],ji),i.variable(t("heating_chart_output")).define("heating_chart_output",["heating_chart"],Ii),i.variable(t("showers_baths_title")).define("showers_baths_title",["md"],Ri),i.variable(t("showers_baths_text_output")).define("showers_baths_text_output",["showers_and_baths_text"],Ni),i.variable(t("showers_bath_chart_output")).define("showers_bath_chart_output",["showers_bath_chart"],Pi),i.variable(t("electricity_title")).define("electricity_title",["md"],zi),i.variable(t("electricity_text_output")).define("electricity_text_output",["electricity_text"],Fi),i.variable(t("electricity_chart_output")).define("electricity_chart_output",["electricity_chart"],Bi),i.variable(t("stuff_title")).define("stuff_title",["md"],Ui),i.variable(t("stuff_text_output")).define("stuff_text_output",["stuff_text"],Ci),i.variable(t("stuff_chart_output")).define("stuff_chart_output",["stuff_chart"],Ti),i.variable(t("eating_title")).define("eating_title",["md"],Vi),i.variable(t("eating_text_output")).define("eating_text_output",["eating_text"],Hi),i.variable(t("eating_chart_output")).define("eating_chart_output",["eating_chart"],Mi),i.variable(t("dogs_title")).define("dogs_title",["md"],Oi),i.variable(t("dogs_text_output")).define("dogs_text_output",["dogs_text"],Wi),i.variable(t("dogs_chart_output")).define("dogs_chart_output",["dogs_chart"],Yi),i.variable(t("summary_title")).define("summary_title",["md"],Qi),i.variable(t("summary_text_output")).define("summary_text_output",["summary_text","all_data"],Zi),i.variable(t("summary_chart_output")).define("summary_chart_output",["unit_chart_2","all_data_dict"],Ki),i.variable(t("summary_text_output_2")).define("summary_text_output_2",["md"],Ji),i.variable(t("energy_use_treemap")).define("energy_use_treemap",["treemap_chart","all_data","width"],Xi),i.variable(t()).define(["md"],en),i.variable(t("md_notinclude")).define("md_notinclude",["md"],tn),i.variable(t()).define(["md"],nn),i.variable(t()).define(["primary_energy_use_per_capita"],rn),i.variable(t()).define(["md"],an),i.variable(t()).define(["md"],on),i.variable(t()).define(["final_energy_use_per_capita"],un),i.variable(t()).define(["md"],ln),i.variable(t("all_data")).define("all_data",["driving_data","flying_data","electricity_data","eating_data","dogs_data","heating_gas_data","stuff_data"],sn),i.variable(t("all_data_dict")).define("all_data_dict",["all_data"],dn);const n=e.module(C);i.import("driving_text",n),i.import("driving_conclusion",n),i.import("driving_data",n),i.import("driving_chart",n);const r=e.module(X);i.import("flying_text",r),i.import("flying_chart",r),i.import("flying_data",r);const a=e.module(ce);i.import("electricity_text",a),i.import("electricity_conclusion",a),i.import("electricity_data",a),i.import("electricity_chart",a);const o=e.module(xe);i.import("dogs_text",o),i.import("dogs_conclusion",o),i.import("dogs_data",o),i.import("dogs_chart",o);const u=e.module(Ve);i.import("eating_text",u),i.import("eating_conclusion",u),i.import("eating_data",u),i.import("eating_chart",u);const l=e.module(_t);i.import("heating_text",l),i.import("showers_and_baths_text",l),i.import("heating_gas_data",l),i.import("heating_chart",l),i.import("showers_bath_chart",l);const s=e.module($t);i.import("stuff_text",s),i.import("stuff_conclusion",s),i.import("stuff_data",s),i.import("stuff_chart",s);const d=e.module(Ft);i.import("treemap_chart",d),i.import("summary_text",d);const c=e.module(bi);i.import("primary_energy_use_per_capita",c),i.import("final_energy_use_per_capita",c);const f=e.module(S);i.import("key",f),i.variable(t("ga")).define("ga",["require","html"],cn);const _=e.module(S);return i.import("unit_chart",_),i.import("unit_chart_2",_),i}var _n=i(5860);const pn=e=>n.createElement(a.H,{frontmatter:e.pageContext.frontmatter}),mn=["title","under_title_blurb","key_to_graphics_title","key_to_graphics_text","driving_title","driving_text_output","driving_chart_output","flying_title","flying_text_output","flying_chart_output","heating_title","heating_text_output","heating_chart_output","showers_baths_title","showers_baths_text_output","showers_bath_chart_output","electricity_title","electricity_text_output","electricity_chart_output","stuff_title","stuff_text_output","stuff_chart_output","showers_title","showers_text_output","showers_chart_output","eating_title","eating_text_output","eating_chart_output","washing_title","washing_text_output","washing_chart_output","dogs_title","dogs_text_output","dogs_chart_output","summary_title","summary_text_output","summary_chart_output","summary_text_output_2","energy_use_treemap"];function hn(e){return n.createElement(_n.Z,{notebook:fn,cells:mn,customClassName:"energy_usage"})}var gn=function(e){return void 0===e&&(e={}),n.createElement(r.fE,e,n.createElement(hn,e))}},5860:function(e,t,i){var n=i(7294),r=i(6493);const a="mdx-container-div",o=new r.Zu,u=Object.assign({},o,{width:function(){return o.Generators.observe((e=>{let t=e(document.getElementById(a).clientWidth);function i(){let i=document.getElementById(a).clientWidth;i!==t&&e(t=i)}return window.addEventListener("resize",i),()=>window.removeEventListener("resize",i)}))}});t.Z=function(e){let{notebook:t,cells:i,customClassName:a}=e;const o=(0,n.useRef)(i.map((()=>n.createRef())));return(0,n.useEffect)((()=>{const e=new r.r_(u);return e.module(t,(e=>{const t=i.indexOf(e);if(-1!==t)return new r.lj(o.current[t].current)})),()=>e.dispose()}),[t,i]),n.createElement("div",{className:a},o.current.map(((e,t)=>n.createElement("div",{key:t,ref:e}))))}},7825:function(e,t,i){i.d(t,{H:function(){return a}});var n=i(7294),r=i(4160);const a=e=>{let{frontmatter:t}=e;const{title:i,description:a,image:o,siteUrl:u,twitterUsername:l}=(0,r.K2)("1865044719").site.siteMetadata,s={title:(null==t?void 0:t.title)||i,description:(null==t?void 0:t.description)||a,image:`${u}${(null==t?void 0:t.image)||o}`,url:`${u}${(null==t?void 0:t.pathname)||""}`,twitterUsername:l,...t},d=null==t?void 0:t.stylesheet;return n.createElement(n.Fragment,null,n.createElement("title",null,s.title),n.createElement("meta",{name:"description",content:s.description}),n.createElement("meta",{name:"image",content:s.image}),d&&n.createElement("link",{rel:"stylesheet",type:"text/css",href:`/styles/${d}`}))}}}]);
//# sourceMappingURL=component---src-mdx-energy-usage-mdx-ab64c1584fc34ba47a5a.js.map