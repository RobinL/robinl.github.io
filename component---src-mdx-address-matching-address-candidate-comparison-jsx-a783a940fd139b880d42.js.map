{"version":3,"file":"component---src-mdx-address-matching-address-candidate-comparison-jsx-a783a940fd139b880d42.js","mappings":"6KAQe,SAASA,EAA2BC,GAG/C,IAHgD,aAChDC,EAAY,WACZC,EAAa,IAChBF,EACG,MAAMG,EAAW,CACbC,OAAQ,EACRC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,WAAY,YACZC,SAAU,UACVC,WAAY,WACZC,WAAY,KAGVC,EAAa,CACfC,WAAY,IACZJ,SAAU,UACVK,MAAO,UACPC,cAAe,UAGbC,EAAuC,IAAtBd,EAAWe,OAAe,oBAAsB,sBACvE,OACIC,EAAAA,cAAA,OACIC,MAAO,CACHC,OAAQ,oBACRb,aAAc,UACdF,QAAS,UACTgB,SAAU,QACVC,QAAS,OACTC,cAAe,SACfC,IAAK,UACLf,SAAU,UACVgB,aAAc,UAIlBP,EAAAA,cAAA,WACIA,EAAAA,cAAA,QAAMC,MAAOP,GAAY,iBACzBM,EAAAA,cAAA,OAAKC,MAAO,IAAKhB,EAAUuB,UAAW,YACjCzB,IAKTiB,EAAAA,cAAA,WACIA,EAAAA,cAAA,QAAMC,MAAOP,GAAaI,GAC1BE,EAAAA,cAAA,OACIC,MAAO,CACHG,QAAS,OACTC,cAAe,SACfC,IAAK,SACLE,UAAW,YAGdxB,EAAWyB,KAAI,CAAAC,EAAuBC,KAAS,IAA/B,QAAEC,EAAO,QAAEC,GAASH,EACjC,MAAMI,EAAa,UACbC,EAAoB,UAE1B,IACIC,EAEAC,EAHAC,EAAc,wBAEdC,EAAO,GAaX,OAXgB,IAAZN,GACAK,EAAc,aAAaJ,IAC3BK,EAAO,IACPF,EAAYH,IACO,IAAZD,IAEPG,EAAYD,EACZI,EAAO,GACPF,EAAYF,GAIZf,EAAAA,cAAA,OACIoB,IAAKT,EACLV,MAAO,CACHG,QAAS,OACTC,cAAe,MACfgB,WAAY,YAIhBrB,EAAAA,cAAA,QACIC,MAAO,CACHX,WAAY,UACZK,WAAY,IACZJ,SAAU,UACVK,MAAO,UACP0B,SAAU,SACVC,UAAW,QACXC,YAAa,SACbC,WAAY,OACZrB,QAAS,OACTiB,WAAY,aACZK,WAAY,YAGff,EAAM,EAAE,KAEbX,EAAAA,cAAA,OACIC,MAAO,CACHG,QAAS,OACTuB,KAAM,EACNN,WAAY,SACZf,IAAK,SACLJ,OAAQgB,EACR7B,aAAc,UACdF,QAAS,YAGba,EAAAA,cAAA,OACIC,MAAO,IACAhB,EACHC,OAAQ,EACRU,MAAOoB,IAGVJ,GAGLZ,EAAAA,cAAA,QACIC,MAAO,CACHV,SAAU,SACVE,WAAY,EACZG,MAAOqB,EACPQ,WAAY,OACZG,MAAO,UACPL,UAAW,WAGdJ,IAGP,MAOlC,C","sources":["webpack://robinlinacre/./src/mdx/address_matching/AddressCandidateComparison.jsx"],"sourcesContent":["import React from \"react\";\n\n/**\n * Compact component that compares a single messy address with a list of\n * candidate addresses, allowing portions of each address to be arbitrary JSX.\n *\n * @param {{ messyAddress: React.ReactNode; candidates: Array<{ address: React.ReactNode; isMatch: boolean }> }} props\n */\nexport default function AddressCandidatesComparison({\n    messyAddress,\n    candidates = [],\n}) {\n    const preStyle = {\n        margin: 0,\n        padding: \"0.25rem\",\n        background: \"#f3f4f6\", // tailwind slate-100\n        borderRadius: \"0.25rem\",\n        fontFamily: \"monospace\",\n        fontSize: \"0.85rem\",\n        whiteSpace: \"pre-wrap\",\n        lineHeight: 1.3,\n    };\n\n    const labelStyle = {\n        fontWeight: 600,\n        fontSize: \"0.75rem\",\n        color: \"#374151\", // tailwind slate-700\n        letterSpacing: \"0.01em\",\n    };\n\n    const candidateLabel = candidates.length === 1 ? \"Candidate address\" : \"Candidate addresses\";\n    return (\n        <div\n            style={{\n                border: \"1px solid #d1d5db\", // tailwind slate-300\n                borderRadius: \"0.25rem\",\n                padding: \"0.75rem\",\n                maxWidth: \"40rem\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"0.75rem\",\n                fontSize: \"0.85rem\",\n                marginBottom: \"0.5em\", // add spacing under the component\n            }}\n        >\n            {/* Messy address */}\n            <div>\n                <span style={labelStyle}>Messy address</span>\n                <pre style={{ ...preStyle, marginTop: \"0.25rem\" }}>\n                    {messyAddress}\n                </pre>\n            </div>\n\n            {/* Candidate addresses */}\n            <div>\n                <span style={labelStyle}>{candidateLabel}</span>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"0.4rem\",\n                        marginTop: \"0.25rem\",\n                    }}\n                >\n                    {candidates.map(({ address, isMatch }, idx) => {\n                        const matchColor = \"#16a34a\"; // tailwind green-600\n                        const nonMatchTextColor = \"#7f1d1d\"; // tailwind red-800\n                        // Determine border and text color only if isMatch is explicitly true/false\n                        let borderStyle = \"1px solid transparent\";\n                        let textColor = undefined;\n                        let tick = \"\";\n                        let tickColor = undefined;\n                        if (isMatch === true) {\n                            borderStyle = `1px solid ${matchColor}`;\n                            tick = \"âœ…\";\n                            tickColor = matchColor;\n                        } else if (isMatch === false) {\n                            // No border, but red text for non-match\n                            textColor = nonMatchTextColor;\n                            tick = \"\";\n                            tickColor = nonMatchTextColor;\n                        }\n                        // If isMatch is undefined, no special formatting\n                        return (\n                            <div\n                                key={idx}\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    alignItems: \"stretch\",\n                                }}\n                            >\n                                {/* Numbering at the leftmost edge */}\n                                <span\n                                    style={{\n                                        fontFamily: \"inherit\",\n                                        fontWeight: 500,\n                                        fontSize: \"0.85rem\",\n                                        color: \"#6b7280\", // tailwind slate-500\n                                        minWidth: \"1.5rem\",\n                                        textAlign: \"right\",\n                                        marginRight: \"0.0rem\",\n                                        userSelect: \"none\",\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        paddingTop: \"0.25rem\",\n                                    }}\n                                >\n                                    {idx + 1}.\n                                </span>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        flex: 1,\n                                        alignItems: \"center\",\n                                        gap: \"0.6rem\",\n                                        border: borderStyle,\n                                        borderRadius: \"0.25rem\",\n                                        padding: \"0.25rem\",\n                                    }}\n                                >\n                                    <pre\n                                        style={{\n                                            ...preStyle,\n                                            margin: 0,\n                                            color: textColor,\n                                        }}\n                                    >\n                                        {address}\n                                    </pre>\n                                    {/* Tick only for the match */}\n                                    <span\n                                        style={{\n                                            fontSize: \"1.1rem\",\n                                            lineHeight: 1,\n                                            color: tickColor,\n                                            userSelect: \"none\",\n                                            width: \"1.25rem\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        {tick}\n                                    </span>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":["AddressCandidatesComparison","_ref","messyAddress","candidates","preStyle","margin","padding","background","borderRadius","fontFamily","fontSize","whiteSpace","lineHeight","labelStyle","fontWeight","color","letterSpacing","candidateLabel","length","React","style","border","maxWidth","display","flexDirection","gap","marginBottom","marginTop","map","_ref2","idx","address","isMatch","matchColor","nonMatchTextColor","textColor","tickColor","borderStyle","tick","key","alignItems","minWidth","textAlign","marginRight","userSelect","paddingTop","flex","width"],"sourceRoot":""}