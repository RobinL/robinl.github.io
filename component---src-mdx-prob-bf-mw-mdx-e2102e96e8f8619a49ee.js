"use strict";(self.webpackChunkrobinlinacre=self.webpackChunkrobinlinacre||[]).push([[5439],{7671:function(n,e,t){t.r(e),t.d(e,{Head:function(){return z},default:function(){return H}});var a=t(1151),i=t(7294),r=t(7848);function o(n){return n`# Interactive Bayes Factor, Probability and Match Weight`}function l(n,e,t){let a=JSON.parse(n);return a.datasets.mydata=e,a.vconcat.forEach((n=>{n.hasOwnProperty("width")&&(n.width=t-190)})),a}function c(n,e){return n(e)}function m(n,e,t,a){return t`${a`\text{Partial Match Weight} = \omega = ${n(e,4)}`}`}function s(n,e,t,a,i,r){const o=n(e(t),4);a(t).toFixed(4);return i`${r`\text{Bayes Factor} = K = 2^{\omega} = 2^{{${n(t,4)}}} = ${o}`}`}function u(n,e,t,a,i){const r=n(e).toFixed(4),o=t(e,4);return a`${i`\text{Probability} = p = \frac{K}{1 + K} = \frac{2^{{${o}}}}{1 + 2^{{${o}}}} = ${r}`}`}function d(n,e){return n`${e`\text{Bayes Factor} = K = \frac{p}{1-p}`}`}function p(n,e,t,a){return t`${a`\text{Probability} = p = ${n(e).toFixed(4)}`}`}function f(n,e,t,a,i,r){const o=n(e),l=o.toFixed(4);return i`${r`\text{Bayes Factor} = K = \frac{p}{1-p} = \frac{${l}}{1 - ${l}} = ${t(a(o),4)}`}`}function b(n,e,t,a,i,r){const o=n(e);return i`${r`\text{Partial Match Weight} = \omega = \log_{2} K = \log_{2} {${t(o,4)}} = ${t(a(o),4)}`}`}function h(n){return n.range([0,1],{label:"Prior probability"})}function g(n){return n.range([5,40],{label:"Max match weight",step:5,value:10})}function v(n,e,t,a,i,r,o,l){const c=n(e),m=t(c),s=m+a,u=i(s);return o`${`With a prior probability of ${e.toFixed(4)}, applying a partial match weight of ${r(a,4)} would result in: `} ${l`
  \begin{aligned}
  \text{Prior as probability} &= p_{\text{prior}} &= ${r(e,4)}\\
  \text{Prior as Bayes Factor} &= K = \frac{p_{\text{prior}}}{1 - p_{\text{prior}}} &= ${r(c,4)} \\
  \text{Prior as Match Weight} &= \omega_{\text{prior}} = \log_{2}(K) &= ${r(m,4)} \\
  \text{Selected Partial Match Weight} &= v &= ${r(a,4)} \\
  \text{Posterior Match Weight} &= \omega_{\text{posterior}} = \omega_{\text{prior}} + v &= ${r(s,4)} \\
  \text{Posterior Probability} &= p_{\text{posterior}} = \frac{2^{\omega_{\text{posterior}}}}{1 + 2^{\omega_{\text{posterior}}}} &= ${r(u,4)}
  \end{aligned}
`}`}function y(){return function(n){return Math.pow(2,n)}}function w(){return function(n){return Math.pow(2,n)/(1+Math.pow(2,n))}}function _(){return function(n){return Math.pow(2,n)/(1+Math.pow(2,n))}}function x(){return function(n){return Math.log2(n)}}function F(){return function(n){return n/(1-n)}}function E(){return function(n,e){if(0===n)return 0;const t=Math.floor(Math.log10(Math.abs(n))),a=Math.pow(10,e-t-1);return Math.round(n*a)/a}}function M(n){return n("vega-embed@6")}function P(n,e){return n(e,"param_7")}function $(n){return n.mw[0]}function B(n){return function(e,t){return n.observe((function(n){const a=(e,t)=>n(t);return e.addSignalListener(t,a),n(e.signal(t)),()=>e.removeSignalListener(t,a)}))}}function W(){return function(n){return 1!==n?n/(1-n):1/0}}function k(n){return function(e){const t=n(e),a=Math.log2(t);return Math.round(a*Math.pow(10,8))/Math.pow(10,8)}}function S(){return function(n){return Math.pow(2,n)}}function q(){return function(n){return n/(1+n)}}function T(){return function(n,e){if(n>=1e3)return n.toLocaleString(void 0,{maximumFractionDigits:0});if(n>=100)return n.toLocaleString(void 0,{maximumFractionDigits:1});if(n>=10)return n.toLocaleString(void 0,{maximumFractionDigits:2});if(n>=1)return n.toLocaleString(void 0,{maximumFractionDigits:3}).replace(/\.?0+$/,"");{const t=Math.abs(e),a=4+Math.floor(t/5);return n.toLocaleString(void 0,{minimumFractionDigits:a}).replace(/\.?0+$/,"")}}}function A(n,e,t,a,i,r){const o=-n,l=-1*o;let c=Array.from({length:5*(l-o)+1},((n,a)=>e(t((a+5*o)/5))));return c=c.map((n=>({prob:n,bf:a(n),mw:i(n)}))),c=c.map((n=>{const e=Math.abs(n.mw),t=4+Math.floor(e/5),a=n.prob.toLocaleString(void 0,{minimumFractionDigits:t}).replace(/\.?0+$/,""),i=r(n.bf,n.mw),o=n.mw.toLocaleString(void 0,{maximumFractionDigits:1});let l;if(n.prob>.5){const e=n.bf;l=e>100?`${e.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0})}x more likely`:`${e.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:2}).replace(/\.?0+$/,"")}x more likely`}else if(n.prob<.5){const e=1/n.bf;l=e>100?`${e.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0})}x less likely`:`${e.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:2}).replace(/\.?0+$/,"")}x less likely`}else l="no more or less likely";return{...n,prob_fmt:a,bf_fmt:i,mw_fmt:o,int_fmt:l}})),c}function N(n){return n.options({displayMode:!0,fleqn:!0})}function D(){return'\n{\n  "config": {\n    "view": {\n      "continuousWidth": 300,\n      "continuousHeight": 300\n    },\n    "title": {\n      "anchor": "middle"\n    }\n  },\n  "vconcat": [\n    {\n      "layer": [\n        {\n          "mark": {\n            "type": "bar",\n            "opacity": 0.5\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "interpolate": "lab",\n                "range": [\n                  "red",\n                  "red",\n                  "#bbbbbb",\n                  "green",\n                  "green"\n                ]\n              },\n              "title": "Match weight",\n              "type": "quantitative"\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "rule",\n            "color": "#FFAAAA"\n          },\n          "encoding": {\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "text",\n            "baseline": "middle",\n            "fontSize": 16,\n            "fontWeight": "bold"\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "range": [\n                  "#8B0000",\n                  "#8B0000",\n                  "#444444",\n                  "#006400",\n                  "#006400"\n                ]\n              },\n              "type": "quantitative"\n            },\n            "opacity": {\n              "condition": {\n                "param": "param_7",\n                "value": 1,\n                "empty": false\n              },\n              "value": 0\n            },\n            "text": {\n              "field": "mw_fmt",\n              "type": "quantitative"\n            },\n            "x": {\n              "axis": {\n                "labelExpr": "datum.value",\n                "title": "Partial Match Weight"\n              },\n              "field": "mw",\n              "type": "quantitative"\n            }\n          }\n        },\n        {\n          "mark": {\n            "type": "point"\n          },\n          "encoding": {\n            "opacity": {\n              "value": 0\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "name": "view_58"\n        }\n      ],\n      "height": 30,\n      "resolve": {\n        "scale": {\n          "color": "independent"\n        }\n      },\n      "width": 800\n    },\n    {\n      "layer": [\n        {\n          "mark": {\n            "type": "bar",\n            "opacity": 0.5\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "interpolate": "lab",\n                "range": [\n                  "red",\n                  "red",\n                  "#bbbbbb",\n                  "green",\n                  "green"\n                ]\n              },\n              "title": "Match weight",\n              "type": "quantitative"\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "rule",\n            "color": "#FFAAAA"\n          },\n          "encoding": {\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "text",\n            "baseline": "middle",\n            "fontSize": 16,\n            "fontWeight": "bold"\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "range": [\n                  "#8B0000",\n                  "#8B0000",\n                  "#444444",\n                  "#006400",\n                  "#006400"\n                ]\n              },\n              "type": "quantitative"\n            },\n            "opacity": {\n              "condition": {\n                "param": "param_7",\n                "value": 1,\n                "empty": false\n              },\n              "value": 0\n            },\n            "text": {\n              "field": "bf_fmt",\n              "type": "nominal"\n            },\n            "x": {\n              "axis": {\n                "labelExpr": "if(pow(2, datum.value) >=1, pow(2, datum.value), \'1/\' + (1/pow(2, datum.value)))",\n                "title": "Bayes Factor (odds)"\n              },\n              "field": "mw",\n              "type": "quantitative"\n            }\n          }\n        },\n        {\n          "mark": {\n            "type": "point"\n          },\n          "encoding": {\n            "opacity": {\n              "value": 0\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "name": "view_59"\n        }\n      ],\n      "height": 30,\n      "resolve": {\n        "scale": {\n          "color": "independent"\n        }\n      },\n      "width": 800\n    },\n    {\n      "layer": [\n        {\n          "mark": {\n            "type": "bar",\n            "opacity": 0.5\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "interpolate": "lab",\n                "range": [\n                  "red",\n                  "red",\n                  "#bbbbbb",\n                  "green",\n                  "green"\n                ]\n              },\n              "title": "Match weight",\n              "type": "quantitative"\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "rule",\n            "color": "#FFAAAA"\n          },\n          "encoding": {\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "text",\n            "baseline": "middle",\n            "fontSize": 16,\n            "fontWeight": "bold"\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "range": [\n                  "#8B0000",\n                  "#8B0000",\n                  "#444444",\n                  "#006400",\n                  "#006400"\n                ]\n              },\n              "type": "quantitative"\n            },\n            "opacity": {\n              "condition": {\n                "param": "param_7",\n                "value": 1,\n                "empty": false\n              },\n              "value": 0\n            },\n            "text": {\n              "field": "prob_fmt",\n              "type": "nominal"\n            },\n            "x": {\n              "axis": {\n                "labelExpr": "format(pow(2, datum.value)/(1+ pow(2, datum.value)), \',.3f\')",\n                "title": "Probability (assuming a prior of 50%)"\n              },\n              "field": "mw",\n              "type": "quantitative"\n            }\n          }\n        },\n        {\n          "mark": {\n            "type": "point"\n          },\n          "encoding": {\n            "opacity": {\n              "value": 0\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "name": "view_57"\n        }\n      ],\n      "height": 30,\n      "resolve": {\n        "scale": {\n          "color": "independent"\n        }\n      },\n      "width": 800\n    },\n    {\n      "layer": [\n        {\n          "mark": {\n            "type": "bar",\n            "opacity": 0.5\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "interpolate": "lab",\n                "range": [\n                  "red",\n                  "red",\n                  "#bbbbbb",\n                  "green",\n                  "green"\n                ]\n              },\n              "title": "Match weight",\n              "type": "quantitative"\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "rule",\n            "color": "#FFAAAA"\n          },\n          "encoding": {\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "transform": [\n            {\n              "filter": {\n                "param": "param_7",\n                "empty": false\n              }\n            }\n          ]\n        },\n        {\n          "mark": {\n            "type": "text",\n            "baseline": "middle",\n            "fontSize": 16,\n            "fontWeight": "bold"\n          },\n          "encoding": {\n            "color": {\n              "field": "mw",\n              "legend": null,\n              "scale": {\n                "domain": [\n                  -100,\n                  -10,\n                  0,\n                  10,\n                  100\n                ],\n                "range": [\n                  "#8B0000",\n                  "#8B0000",\n                  "#444444",\n                  "#006400",\n                  "#006400"\n                ]\n              },\n              "type": "quantitative"\n            },\n            "opacity": {\n              "condition": {\n                "param": "param_7",\n                "value": 1,\n                "empty": false\n              },\n              "value": 0\n            },\n            "text": {\n              "field": "int_fmt",\n              "type": "nominal"\n            },\n            "x": {\n              "axis": {\n                "labelExpr": "if(pow(2, datum.value) >=1, pow(2, datum.value), (1/pow(2, datum.value)))",\n                "title": "⬅️  times less likely                    Intuitive interpretation                    times more likely  ➡️"\n              },\n              "field": "mw",\n              "type": "quantitative"\n            }\n          }\n        },\n        {\n          "mark": {\n            "type": "point"\n          },\n          "encoding": {\n            "opacity": {\n              "value": 0\n            },\n            "x": {\n              "field": "mw",\n              "type": "quantitative"\n            }\n          },\n          "name": "view_60"\n        }\n      ],\n      "height": 30,\n      "resolve": {\n        "scale": {\n          "color": "independent"\n        }\n      },\n      "width": 800\n    }\n  ],\n  "data": {\n    "name": "mydata"\n  },\n  "params": [\n    {\n      "name": "param_7",\n      "select": {\n        "type": "point",\n        "fields": [\n          "mw"\n        ],\n        "nearest": true,\n        "on": "mouseover"\n      },\n      "value": [\n        {\n          "mw": 0\n        }\n      ],\n      "views": [\n        "view_58",\n        "view_59",\n        "view_57",\n        "view_60"\n      ]\n    }\n  ],\n  "title": "Correspondence between probability, match weight, and Bayes factor",\n  "$schema": "https://vega.github.io/schema/vega-lite/v5.8.0.json",\n  "datasets": {\n    "mydata": []\n  }\n}'}function L(n,e){const t=n.module();return t.variable(e()).define(["md"],o),t.variable(e("spec")).define("spec",["spec_json","chart_data","width"],l),t.variable(e("viewof chart")).define("viewof chart",["embed","spec"],c),t.variable(e("chart")).define("chart",["Generators","viewof chart"],((n,e)=>n.input(e))),t.variable(e("mw_1")).define("mw_1",["roundToSignificantFigures","selected_val","html","tex"],m),t.variable(e("bf_1")).define("bf_1",["roundToSignificantFigures","calcBayesFactorFromPartialMatchWeight","selected_val","calcProbabilityFromPartialMatchWeight","html","tex"],s),t.variable(e("p_1")).define("p_1",["calcProbabilityFromPartialMatchWeight","selected_val","roundToSignificantFigures","html","tex"],u),t.variable(e()).define(["html","tex"],d),t.variable(e("p_2")).define("p_2",["calcProbabilityFromPartialMatchWeight","selected_val","html","tex"],p),t.variable(e("bf_2")).define("bf_2",["calcProbabilityFromPartialMatchWeight","selected_val","roundToSignificantFigures","calcBayesFactorFromProbability","html","tex"],f),t.variable(e("mw_2")).define("mw_2",["calcBayesFactorFromPartialMatchWeight","selected_val","roundToSignificantFigures","calcPartialMatchWeightFromBayesFactor","html","tex"],b),t.variable(e("viewof prior_probabability")).define("viewof prior_probabability",["Inputs"],h),t.variable(e("prior_probabability")).define("prior_probabability",["Generators","viewof prior_probabability"],((n,e)=>n.input(e))),t.variable(e("viewof max_match_weight")).define("viewof max_match_weight",["Inputs"],g),t.variable(e("max_match_weight")).define("max_match_weight",["Generators","viewof max_match_weight"],((n,e)=>n.input(e))),t.variable(e()).define(["calcBayesFactorFromProbability","prior_probabability","calcPartialMatchWeightFromBayesFactor","selected_val","calcProbabilityFromPartialMatchWeight","roundToSignificantFigures","html","tex"],v),t.variable(e("calcBayesFactorFromPartialMatchWeight")).define("calcBayesFactorFromPartialMatchWeight",y),t.variable(e("calcProbabilityFromPartialMatchWeight")).define("calcProbabilityFromPartialMatchWeight",w),t.variable(e("computeProbabilityFromPartialMatchWeight")).define("computeProbabilityFromPartialMatchWeight",_),t.variable(e("calcPartialMatchWeightFromBayesFactor")).define("calcPartialMatchWeightFromBayesFactor",x),t.variable(e("calcBayesFactorFromProbability")).define("calcBayesFactorFromProbability",F),t.variable(e("roundToSignificantFigures")).define("roundToSignificantFigures",E),t.variable(e("embed")).define("embed",["require"],M),t.variable(e("observed_param")).define("observed_param",["observe_chart_data","chart"],P),t.variable(e("selected_val")).define("selected_val",["observed_param"],$),t.variable(e("observe_chart_data")).define("observe_chart_data",["Generators"],B),t.variable(e("probToBayesFactor")).define("probToBayesFactor",W),t.variable(e("probToMatchWeight")).define("probToMatchWeight",["probToBayesFactor"],k),t.variable(e("matchWeightToBayesFactor")).define("matchWeightToBayesFactor",S),t.variable(e("bayesFactorToProb")).define("bayesFactorToProb",q),t.variable(e("formatBf")).define("formatBf",T),t.variable(e("chart_data")).define("chart_data",["max_match_weight","bayesFactorToProb","matchWeightToBayesFactor","probToBayesFactor","probToMatchWeight","formatBf"],A),t.variable(e("texd")).define("texd",["tex"],N),t.variable(e("spec_json")).define("spec_json",D),t}var G=t(8316),j=t(8342),C=t(1237),K=t(7825),Z=t(4160);const z=n=>i.createElement(K.H,{frontmatter:n.pageContext.frontmatter});function I(n){const e=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2"},(0,a.ah)(),n.components);return i.createElement(i.Fragment,null,i.createElement(G.Z),"\n",i.createElement(e.h1,null,"The relationship between Partial Match Weights, Bayes Factors, and Probabilities"),"\n",i.createElement(e.p,null,"This chart shows how the partial match weights in a Splink ",i.createElement(e.code,null,"linker.match_weights_chart")," (see ",i.createElement(e.a,{href:"https://moj-analytical-services.github.io/splink/charts/match_weights_chart.html"},"here"),") are related to Bayes Factors and probabilities."),"\n",i.createElement(C.Z,null," Hover over the chart below to select a match weight. "),"\n",i.createElement(j.A5,{notebook:L},i.createElement(j.Gc,{cellName:"viewof max_match_weight"}),i.createElement(j.Gc,{cellName:"viewof chart"}),i.createElement("br"),i.createElement(e.p,null,"Caveat: the 'probability' is really only defined if a prior exists.  For the above chart, the prior is assumed to be 50%."),i.createElement("br"),i.createElement(e.h2,null,"Conversion of partial match weight to probability"),i.createElement("br"),i.createElement(j.Gc,{cellName:"mw_1"}),i.createElement("br"),i.createElement(j.Gc,{cellName:"bf_1"}),i.createElement("br"),i.createElement(j.Gc,{cellName:"p_1"}),i.createElement("br"),i.createElement(e.h2,null,"Conversion of probability to partial match weight"),i.createElement("br"),i.createElement(j.Gc,{cellName:"p_2"}),i.createElement("br"),i.createElement(j.Gc,{cellName:"bf_2"}),i.createElement("br"),i.createElement(j.Gc,{cellName:"mw_2"}),i.createElement("br")),"\n",i.createElement(e.h2,null,"Additional resources"),"\n",i.createElement(e.p,null,"Also check the ",i.createElement(Z.rU,{to:"/match_weight_calculator/"},"match weight calculator")," to more precisely calculate match weights, probabilities, and Bayes factors."),"\n",i.createElement(G.Z))}var H=function(n){return void 0===n&&(n={}),i.createElement(r.pY,n,i.createElement(I,n))}},1237:function(n,e,t){var a=t(7294),i=t(2091);e.Z=n=>{let{children:e}=n;return a.createElement("div",{className:"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 py-2 px-4 mb-4",role:"alert"},a.createElement("div",{className:"flex"},a.createElement("div",null,a.createElement(i.hWE,{className:"text-yellow-400 mr-4"})),a.createElement("div",null,a.createElement("p",{className:"mb-0"},e))))}},8342:function(n,e,t){t.d(e,{A5:function(){return u},Gc:function(){return s}});var a=t(7294),i=t(6493);const r=(0,a.createContext)(null),o="mdx-container-div",l=new i.Zu;Object.assign({},l,{width:c});function c(){return l.Generators.observe((n=>{let e=n(document.getElementById(o).clientWidth);function t(){let t=document.getElementById(o).clientWidth;t!==e&&n(e=t)}return window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)}))}function m(n){let{notebook:e,children:t}=n;const{0:o,1:l}=(0,a.useState)({}),m=new i.r_(Object.assign({},new i.Zu,{width:c}));return(0,a.useEffect)((()=>(m.module(e,(n=>{if(o[n])return new i.lj(o[n])})),()=>m.dispose())),[m,o,e]),a.createElement(r.Provider,{value:{setSharedRefs:l}},t)}function s(n){let{cellName:e,styles:t,className:i}=n;const o=(0,a.useRef)(null),{setSharedRefs:l}=(0,a.useContext)(r);return(0,a.useEffect)((()=>{l((n=>({...n,[e]:o.current})))}),[e,l]),a.createElement("div",{ref:o,style:t,className:i})}function u(n){let{notebook:e,children:t}=n;return a.createElement(m,{notebook:e},t)}},8316:function(n,e,t){var a=t(7294),i=t(4160);e.Z=()=>a.createElement("div",{className:"bg-gray-100 p-2 mt-2 mb-2 italic rounded-md text-gray-600 text-xs"},a.createElement("div",{className:"flex justify-center items-center"},a.createElement("div",{className:"text-center"},a.createElement("span",null,"This article is part of the ",a.createElement(i.rU,{to:"/probabilistic_linkage",className:"text-blue-500 hover:underline"},"probabilistic linkage training materials")))))},7825:function(n,e,t){t.d(e,{H:function(){return r}});var a=t(7294),i=t(4160);const r=n=>{let{frontmatter:e}=n;const{title:t,description:r,image:o,siteUrl:l,twitterUsername:c}=(0,i.K2)("1865044719").site.siteMetadata,m={title:(null==e?void 0:e.title)||t,description:(null==e?void 0:e.description)||r,image:`${l}${(null==e?void 0:e.image)||o}`,url:`${l}${(null==e?void 0:e.pathname)||""}`,twitterUsername:c,...e},s=null==e?void 0:e.stylesheet;return a.createElement(a.Fragment,null,a.createElement("title",null,m.title),a.createElement("meta",{name:"description",content:m.description}),a.createElement("meta",{name:"image",content:m.image}),s&&a.createElement("link",{rel:"stylesheet",type:"text/css",href:`/styles/${s}`}))}}}]);
//# sourceMappingURL=component---src-mdx-prob-bf-mw-mdx-e2102e96e8f8619a49ee.js.map