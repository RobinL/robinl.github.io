{"version":3,"file":"component---src-mdx-fellegi-sunter-accuracy-mdx-e41dec417d967e002655.js","mappings":"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","sources":["webpack://robinlinacre/./src/mdx/fellegi_sunter_accuracy.mdx","webpack://robinlinacre/./src/components/CompactTutorialNav.jsx","webpack://robinlinacre/./src/components/ProbLinkageLayout.jsx","webpack://robinlinacre/./src/hooks/use-site-metadata.jsx","webpack://robinlinacre/./src/components/SEO.jsx","webpack://robinlinacre/./src/components/Subtitle.jsx","webpack://robinlinacre/./src/components/TutorialNav.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {ProbLinkageLayout as MDXLayout} from \"../components/ProbLinkageLayout\";\nimport {SEO} from \"../components/SEO\";\nimport Subtitle from \"../components/Subtitle.jsx\";\nimport DefinitionToolTip from \"../components/DefinitionToolTip\";\nimport {Link} from \"gatsby\";\nexport const Head = props => React.createElement(SEO, {\n  frontmatter: props.pageContext.frontmatter\n});\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    em: \"em\",\n    code: \"code\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Why Probabilistic Linkage is More Accurate than Fuzzy Matching For Data Deduplication\"), \"\\n\", React.createElement(Subtitle, null, \"How effectively do different approaches to record linkage exploit the information in the data to make predictions?\"), \"\\n\", React.createElement(_components.p, null, \"Data duplication (record linkage) algorithms are models that predict whether records such as the following represent the same entity.\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"first_name\"), React.createElement(_components.th, null, \"surname\"), React.createElement(_components.th, null, \"dob\"), React.createElement(_components.th, null, \"city\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"joss\"), React.createElement(_components.td, null, \"hammond\"), React.createElement(_components.td, null, \"1984-01-02\"), React.createElement(_components.td, null, \"london\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"joss\"), React.createElement(_components.td, null, \"hamond\"), React.createElement(_components.td, null, \"1984-07-02\"), React.createElement(_components.td, null, \"manchester\")))), \"\\n\", React.createElement(_components.p, null, \"What algorithms work best?  To get the best accuracy in record linkage, we need a model that uses as much information from the input data as possible.\"), \"\\n\", React.createElement(_components.p, null, \"This article describes the three types of information that are most important in making an accurate prediction, and how all three are leveraged by the Fellegi-Sunter model as used in \", React.createElement(_components.a, {\n    href: \"https://github.com/moj-analytical-services/splink\"\n  }, \"Splink\"), \", a free software package for record linkage at scale.\"), \"\\n\", React.createElement(_components.p, null, \"It also describes how some alternative record linkage approaches throw away some of this information, leaving accuracy on the table.\"), \"\\n\", React.createElement(_components.h2, null, \"The three types of information\"), \"\\n\", React.createElement(_components.p, null, \"Broadly, there are three categories of information that are relevant when trying to predict whether this pair of records represent the same entity:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"The similarity of the pair of records, \", React.createElement(_components.em, null, \"without\"), \" reference to the overall dataset  (sometimes known as fuzzy matching)\"), \"\\n\", React.createElement(_components.li, null, \"The frequency of values in the overall dataset, or more generally how common it is to observe different types of fuzzy matches\"), \"\\n\", React.createElement(_components.li, null, \"The data quality of the overall dataset\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Let's look at each in turn.\"), \"\\n\", React.createElement(_components.h2, null, \"1. Similarity of the pairwise record comparison (fuzzy matching)\"), \"\\n\", React.createElement(_components.p, null, \"The most obvious way to predict whether two records represent the same entity is to measure whether the columns contain the same or similar information.\"), \"\\n\", React.createElement(_components.p, null, \"The similarity of each column can be measured quantitatively using fuzzy matching functions like \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Levenshtein_distance\"\n  }, \"Levenshtein\"), \" or \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\"\n  }, \"Jaro-Winker\"), \" for text, or numeric differences such as absolute or percentage difference.\"), \"\\n\", React.createElement(_components.p, null, \"For example, \", React.createElement(_components.code, null, \"hammond\"), \" vs \", React.createElement(_components.code, null, \"hamond\"), \" has a Jaro-Winkler similarity of 0.97; it's probably a typo.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"1984-01-02\"), \" vs \", React.createElement(_components.code, null, \"1984-07-02\"), \" has a Levenshtein distance of 1.\"), \"\\n\", React.createElement(_components.p, null, \"But how do we combine these different measures of similarity? They could be assigned weights, and summed together to compute a total similarity score.\"), \"\\n\", React.createElement(_components.p, null, \"The approach is sometimes known as fuzzy matching, and it is an important part of an accurate linkage model.\"), \"\\n\", React.createElement(_components.p, null, \"However using this approach alone has major drawback - the weights are arbitrary:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The importance of different fields has to be guessed at by the user.   Clearly a match on \", React.createElement(_components.code, null, \"gender\"), \" is less important than a match on \", React.createElement(_components.code, null, \"dob\"), \". How about the negative weights that should be assigned to non-matches?\"), \"\\n\", React.createElement(_components.li, null, \"For each field, a decision must be made on how changes in the fuzzy matching metric influence the score.   For example, how much should our prediction change for a Jaro-Winkler score of 0.8 vs. 0.9?  Is this the same or different depending on the field?\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"2. Frequency of values in the overall dataset, or more generally how often different types of fuzzy matching scenarios occur\"), \"\\n\", React.createElement(_components.p, null, \"We can improve on fuzzy matching by accounting for the frequency of values in the overall dataset (sometimes known as 'term frequencies').\"), \"\\n\", React.createElement(_components.p, null, \"For example, \", React.createElement(_components.code, null, \"john\"), \" vs \", React.createElement(_components.code, null, \"john\"), \", and \", React.createElement(_components.code, null, \"joss\"), \" vs \", React.createElement(_components.code, null, \"joss\"), \" are both exact matches so have the same Jaro-Winkler or Levenshtein similarity score, but the latter is stronger evidence of a match than the former, because \", React.createElement(_components.code, null, \"joss\"), \" is an unusual name.\"), \"\\n\", React.createElement(_components.p, null, \"The term frequencies of \", React.createElement(_components.code, null, \"john\"), \" v \", React.createElement(_components.code, null, \"joss\"), \" provide a data-driven estimate of the relative importance of these different names, which can be used to inform the weights.\"), \"\\n\", React.createElement(_components.p, null, \"In essence, the term frequencies capture the likelihood that two \", React.createElement(_components.em, null, \"non-matching\"), \" records would have the same value on a given column i.e. the likelihood of a 'collision' (e.g. two different people with the same name).\"), \"\\n\", React.createElement(_components.p, null, \"In probabilistic linkage, these values are called \", React.createElement(_components.code, null, \"u\"), \" probabilities which are defined more precisely in the  \", React.createElement(Link, {\n    to: \"/m_and_u_values/\"\n  }, \"article on m and u probabilities\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"This concept can be extended to encompass similar records that are not an exact match.  How much of a coincidence is it that \", React.createElement(_components.code, null, \"dob\"), \" differs by a single character (\", React.createElement(_components.code, null, \"1984-01-02\"), \" vs \", React.createElement(_components.code, null, \"1984-07-02\"), \")? This can be measured from the data by looking at how often this occurs.\"), \"\\n\", React.createElement(_components.h2, null, \"3. Data quality of the overall dataset: how often do errors occur amongst matching records?\"), \"\\n\", React.createElement(_components.p, null, \"We've seen that fuzzy matching and term frequency based approaches can allow us to score the similarity between records, and even weight the importance of matches on different columns.\"), \"\\n\", React.createElement(_components.p, null, \"However, none of these techniques help quantify the relative importance of non-matches (e.g. \", React.createElement(_components.code, null, \"london\"), \" vs \", React.createElement(_components.code, null, \"manchester\"), \") to the predicted match probability.\"), \"\\n\", React.createElement(_components.p, null, \"Probabilistic methods explicitly estimate the relative importance of non matches by estimating the data quality of each column. In probabilistic linkage, this information is captured in the \", React.createElement(_components.code, null, \"m\"), \" probabilities which are discussed in more detail in the  \", React.createElement(Link, {\n    to: \"/m_and_u_values/\"\n  }, \"article on m and u probabilities\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"For example, if records have been observed over a number of years, a non-match on \", React.createElement(_components.code, null, \"city\"), \" wouldn't be strong evidence against the two records being a match.\"), \"\\n\", React.createElement(_components.p, null, \"Conversely, if the data quality in the \", React.createElement(_components.code, null, \"dob\"), \" variable is extremely high, then a non-match on gender would be strong evidence against the two records being a true match.\"), \"\\n\", React.createElement(_components.h2, null, \"Probabilistic linkage using Splink\"), \"\\n\", React.createElement(_components.p, null, \"Much of the power of probabilistic models comes from combining all three sources of information in a way which is not possible in other models.\"), \"\\n\", React.createElement(_components.p, null, \"Not only are all three sources of information used to make the prediction, but the Fellegi Sunter model used in \", React.createElement(_components.a, {\n    href: \"https://github.com/moj-analytical-services/splink\"\n  }, \"Splink\"), \" allows us estimate the relative importance of each source of information from the data itself.\"), \"\\n\", React.createElement(_components.p, null, \"These data-driven partial match weights have \", React.createElement(Link, {\n    to: \"/partial_match_weights/\"\n  }, \"intuitive interpretations\"), \", leading to transparent and easy to understand models.\"), \"\\n\", React.createElement(_components.p, null, \"Conversely, fuzzy matching techniques often use arbitrary weights, and cannot fully incorporate information from all three sources.  Term frequency approaches lack the ability to use information about data quality, or a mechanism to appropriately weight fuzzy matches.\"));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst CompactTutorialNav = ({ frontmatter }) => {\n    const { tutorial_number } = frontmatter;\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx(filter: { frontmatter: { tutorial_number: { ne: null } } }) {\n                edges {\n                    node {\n                        frontmatter {\n                            tutorial_number\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    const tutorials = data.allMdx.edges.map(\n        edge => edge.node.frontmatter.tutorial_number\n    );\n    const prevExists = tutorials.includes(tutorial_number - 1);\n    const nextExists = tutorials.includes(tutorial_number + 1);\n\n    const prevSlug = data.allMdx.edges.find(\n        edge => edge.node.frontmatter.tutorial_number === tutorial_number - 1\n    )?.node?.fields?.slug;\n    const nextSlug = data.allMdx.edges.find(\n        edge => edge.node.frontmatter.tutorial_number === tutorial_number + 1\n    )?.node?.fields?.slug;\n\n    return (\n        <div className=\"bg-gray-100 p-2 mt-2 mb-2 italic rounded-md text-gray-600 text-xs\">\n            <div className=\"flex justify-between\">\n                <div className=\"w-1/3 text-left\">\n                    {prevExists && (\n                        <Link\n                            to={prevSlug}\n                            className=\"text-blue-500 hover:underline\"\n                        >\n                            &larr; Previous article\n                        </Link>\n                    )}\n                </div>\n                <div className=\"w-1/3 text-center\">\n                    <span>\n                        This is part {tutorial_number} of the{' '}\n                        <Link\n                            to=\"/probabilistic_linkage\"\n                            className=\"text-blue-500 hover:underline\"\n                        >\n                            tutorial\n                        </Link>\n                    </span>\n                </div>\n                <div className=\"w-1/3 text-right\">\n                    {nextExists && (\n                        <Link\n                            to={nextSlug}\n                            className=\"text-blue-500 hover:underline\"\n                        >\n                            Next article &rarr;\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CompactTutorialNav;\n","import React from 'react';\nimport MDXLayout from './MDXLayout';\nimport TutorialNav from '../components/TutorialNav';\nimport CompactTutorialNav from '../components/CompactTutorialNav';\n\nexport function ProbLinkageLayout({ children, pageContext }) {\n    const { frontmatter } = pageContext;\n\n    const InnerContent = () => (\n        <div>\n            <CompactTutorialNav frontmatter={frontmatter} />\n            {children}\n            <TutorialNav frontmatter={frontmatter} />\n        </div>\n    );\n\n    return (\n        <MDXLayout pageContext={pageContext}>\n            <InnerContent />\n        </MDXLayout>\n    );\n}\n\nexport default ProbLinkageLayout;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    twitterUsername\n                    image\n                    siteUrl\n                }\n            }\n        }\n    `);\n\n    return data.site.siteMetadata;\n};\n","import React from 'react';\nimport { useSiteMetadata } from '../hooks/use-site-metadata';\n\nexport const SEO = ({ frontmatter }) => {\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        image,\n        siteUrl,\n        twitterUsername,\n    } = useSiteMetadata();\n\n    const seo = {\n        title: frontmatter?.title || defaultTitle,\n        description: frontmatter?.description || defaultDescription,\n        image: `${siteUrl}${frontmatter?.image || image}`,\n        url: `${siteUrl}${frontmatter?.pathname || ``}`,\n        twitterUsername,\n        ...frontmatter,\n    };\n\n    const stylesheetLink = frontmatter?.stylesheet;\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {stylesheetLink && (\n                <link\n                    rel=\"stylesheet\"\n                    type=\"text/css\"\n                    href={`/styles/${stylesheetLink}`}\n                />\n            )}\n        </>\n    );\n};\n","import React from 'react';\n\nconst Subtitle = ({ children }) => {\n    const newChildren = React.Children.map(children, child => {\n        if (React.isValidElement(child) && child.type === 'p') {\n            // Remove the <p> wrapper that mdx adds by default\n            return child.props.children;\n        }\n        return child;\n    });\n\n    return (\n        <h2 className=\"text-xl font-sans font-normal text-gray-500 mb-8 mt-0\">\n            {newChildren}\n        </h2>\n    );\n};\n\nexport default Subtitle;\n","import React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst TutorialNav = ({ frontmatter }) => {\n    const { tutorial_number, title } = frontmatter;\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx(filter: { frontmatter: { tutorial_number: { ne: null } } }) {\n                edges {\n                    node {\n                        frontmatter {\n                            tutorial_number\n                            title\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    const sortedTutorials = data.allMdx.edges.sort(\n        (a, b) =>\n            a.node.frontmatter.tutorial_number -\n            b.node.frontmatter.tutorial_number\n    );\n\n    return (\n        <div className=\"bg-blue-100  p-4 mt-8  mb-4 rounded-lg \">\n            <div className=\"container mx-auto\">\n                <div className=\"text-blue-800 font-semibold text-base mb-2\">\n                    <Link\n                        to=\"/probabilistic_linkage\"\n                        className=\"text-blue-500 hover:underline\"\n                    >\n                        Probabilistic Linkage Tutorial Navigation:\n                    </Link>\n                </div>\n                <ol className=\"space-y-2 text-sm\">\n                    {sortedTutorials.map(edge => (\n                        <li\n                            key={edge.node.frontmatter.tutorial_number}\n                            className=\"text-blue-600 text-sm\"\n                        >\n                            {tutorial_number ===\n                            edge.node.frontmatter.tutorial_number ? (\n                                <span className=\"font-bold text-sm\">\n                                    {edge.node.frontmatter.title}\n                                </span>\n                            ) : (\n                                <Link\n                                    to={edge.node.fields.slug}\n                                    className=\"hover:underline\"\n                                >\n                                    {edge.node.frontmatter.title}\n                                </Link>\n                            )}\n                        </li>\n                    ))}\n                </ol>\n            </div>\n        </div>\n    );\n};\n\nexport default TutorialNav;\n"],"names":["Head","props","React","SEO","frontmatter","pageContext","_createMdxContent","_components","Object","assign","h1","p","table","thead","tr","th","tbody","td","a","h2","ol","li","em","code","ul","_provideComponents","components","Subtitle","href","Link","to","MDXLayout","_ref","_data$allMdx$edges$fi","_data$allMdx$edges$fi2","_data$allMdx$edges$fi3","_data$allMdx$edges$fi4","_data$allMdx$edges$fi5","_data$allMdx$edges$fi6","tutorial_number","data","useStaticQuery","tutorials","allMdx","edges","map","edge","node","prevExists","includes","nextExists","prevSlug","find","fields","slug","nextSlug","className","ProbLinkageLayout","children","InnerContent","CompactTutorialNav","TutorialNav","title","defaultTitle","description","defaultDescription","image","siteUrl","twitterUsername","site","siteMetadata","seo","url","pathname","stylesheetLink","stylesheet","name","content","rel","type","newChildren","child","sortedTutorials","sort","b","key"],"sourceRoot":""}